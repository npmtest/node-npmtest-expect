{"/home/travis/build/npmtest/node-npmtest-expect/test.js":"/* istanbul instrument in package npmtest_expect */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-expect/lib.npmtest_expect.js":"/* istanbul instrument in package npmtest_expect */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_expect = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_expect = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-expect/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-expect && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_expect */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_expect\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_expect.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_expect.rollup.js'] =\n            local.assetsDict['/assets.npmtest_expect.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_expect.__dirname + '/lib.npmtest_expect.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-expect/node_modules/expect/lib/index.js":"'use strict';\n\nvar _Expectation = require('./Expectation');\n\nvar _Expectation2 = _interopRequireDefault(_Expectation);\n\nvar _SpyUtils = require('./SpyUtils');\n\nvar _assert = require('./assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _extend = require('./extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction expect(actual) {\n  return new _Expectation2.default(actual);\n}\n\nexpect.createSpy = _SpyUtils.createSpy;\nexpect.spyOn = _SpyUtils.spyOn;\nexpect.isSpy = _SpyUtils.isSpy;\nexpect.restoreSpies = _SpyUtils.restoreSpies;\nexpect.assert = _assert2.default;\nexpect.extend = _extend2.default;\n\nmodule.exports = expect;","/home/travis/build/npmtest/node-npmtest-expect/node_modules/expect/lib/Expectation.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _has = require('has');\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _tmatch = require('tmatch');\n\nvar _tmatch2 = _interopRequireDefault(_tmatch);\n\nvar _assert = require('./assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _SpyUtils = require('./SpyUtils');\n\nvar _TestUtils = require('./TestUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * An Expectation is a wrapper around an assertion that allows it to be written\n * in a more natural style, without the need to remember the order of arguments.\n * This helps prevent you from making mistakes when writing tests.\n */\n\nvar Expectation = function () {\n  function Expectation(actual) {\n    _classCallCheck(this, Expectation);\n\n    this.actual = actual;\n\n    if ((0, _TestUtils.isFunction)(actual)) {\n      this.context = null;\n      this.args = [];\n    }\n  }\n\n  _createClass(Expectation, [{\n    key: 'toExist',\n    value: function toExist(message) {\n      (0, _assert2.default)(this.actual, message || 'Expected %s to exist', this.actual);\n\n      return this;\n    }\n  }, {\n    key: 'toNotExist',\n    value: function toNotExist(message) {\n      (0, _assert2.default)(!this.actual, message || 'Expected %s to not exist', this.actual);\n\n      return this;\n    }\n  }, {\n    key: 'toBe',\n    value: function toBe(value, message) {\n      (0, _assert2.default)(this.actual === value, message || 'Expected %s to be %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toNotBe',\n    value: function toNotBe(value, message) {\n      (0, _assert2.default)(this.actual !== value, message || 'Expected %s to not be %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toEqual',\n    value: function toEqual(value, message) {\n      try {\n        (0, _assert2.default)((0, _TestUtils.isEqual)(this.actual, value), message || 'Expected %s to equal %s', this.actual, value);\n      } catch (error) {\n        // These attributes are consumed by Mocha to produce a diff output.\n        error.actual = this.actual;\n        error.expected = value;\n        error.showDiff = true;\n        throw error;\n      }\n\n      return this;\n    }\n  }, {\n    key: 'toNotEqual',\n    value: function toNotEqual(value, message) {\n      (0, _assert2.default)(!(0, _TestUtils.isEqual)(this.actual, value), message || 'Expected %s to not equal %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toThrow',\n    value: function toThrow(value, message) {\n      (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The \"actual\" argument in expect(actual).toThrow() must be a function, %s was given', this.actual);\n\n      (0, _assert2.default)((0, _TestUtils.functionThrows)(this.actual, this.context, this.args, value), message || 'Expected %s to throw %s', this.actual, value || 'an error');\n\n      return this;\n    }\n  }, {\n    key: 'toNotThrow',\n    value: function toNotThrow(value, message) {\n      (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The \"actual\" argument in expect(actual).toNotThrow() must be a function, %s was given', this.actual);\n\n      (0, _assert2.default)(!(0, _TestUtils.functionThrows)(this.actual, this.context, this.args, value), message || 'Expected %s to not throw %s', this.actual, value || 'an error');\n\n      return this;\n    }\n  }, {\n    key: 'toBeA',\n    value: function toBeA(value, message) {\n      (0, _assert2.default)((0, _TestUtils.isFunction)(value) || typeof value === 'string', 'The \"value\" argument in toBeA(value) must be a function or a string');\n\n      (0, _assert2.default)((0, _TestUtils.isA)(this.actual, value), message || 'Expected %s to be a %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toNotBeA',\n    value: function toNotBeA(value, message) {\n      (0, _assert2.default)((0, _TestUtils.isFunction)(value) || typeof value === 'string', 'The \"value\" argument in toNotBeA(value) must be a function or a string');\n\n      (0, _assert2.default)(!(0, _TestUtils.isA)(this.actual, value), message || 'Expected %s to not be a %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toMatch',\n    value: function toMatch(pattern, message) {\n      (0, _assert2.default)((0, _tmatch2.default)(this.actual, pattern), message || 'Expected %s to match %s', this.actual, pattern);\n\n      return this;\n    }\n  }, {\n    key: 'toNotMatch',\n    value: function toNotMatch(pattern, message) {\n      (0, _assert2.default)(!(0, _tmatch2.default)(this.actual, pattern), message || 'Expected %s to not match %s', this.actual, pattern);\n\n      return this;\n    }\n  }, {\n    key: 'toBeLessThan',\n    value: function toBeLessThan(value, message) {\n      (0, _assert2.default)(typeof this.actual === 'number', 'The \"actual\" argument in expect(actual).toBeLessThan() must be a number');\n\n      (0, _assert2.default)(typeof value === 'number', 'The \"value\" argument in toBeLessThan(value) must be a number');\n\n      (0, _assert2.default)(this.actual < value, message || 'Expected %s to be less than %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toBeLessThanOrEqualTo',\n    value: function toBeLessThanOrEqualTo(value, message) {\n      (0, _assert2.default)(typeof this.actual === 'number', 'The \"actual\" argument in expect(actual).toBeLessThanOrEqualTo() must be a number');\n\n      (0, _assert2.default)(typeof value === 'number', 'The \"value\" argument in toBeLessThanOrEqualTo(value) must be a number');\n\n      (0, _assert2.default)(this.actual <= value, message || 'Expected %s to be less than or equal to %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toBeGreaterThan',\n    value: function toBeGreaterThan(value, message) {\n      (0, _assert2.default)(typeof this.actual === 'number', 'The \"actual\" argument in expect(actual).toBeGreaterThan() must be a number');\n\n      (0, _assert2.default)(typeof value === 'number', 'The \"value\" argument in toBeGreaterThan(value) must be a number');\n\n      (0, _assert2.default)(this.actual > value, message || 'Expected %s to be greater than %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toBeGreaterThanOrEqualTo',\n    value: function toBeGreaterThanOrEqualTo(value, message) {\n      (0, _assert2.default)(typeof this.actual === 'number', 'The \"actual\" argument in expect(actual).toBeGreaterThanOrEqualTo() must be a number');\n\n      (0, _assert2.default)(typeof value === 'number', 'The \"value\" argument in toBeGreaterThanOrEqualTo(value) must be a number');\n\n      (0, _assert2.default)(this.actual >= value, message || 'Expected %s to be greater than or equal to %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toInclude',\n    value: function toInclude(value, compareValues, message) {\n      if (typeof compareValues === 'string') {\n        message = compareValues;\n        compareValues = null;\n      }\n\n      if (compareValues == null) compareValues = _TestUtils.isEqual;\n\n      var contains = false;\n\n      if ((0, _TestUtils.isArray)(this.actual)) {\n        contains = (0, _TestUtils.arrayContains)(this.actual, value, compareValues);\n      } else if ((0, _TestUtils.isObject)(this.actual)) {\n        contains = (0, _TestUtils.objectContains)(this.actual, value, compareValues);\n      } else if (typeof this.actual === 'string') {\n        contains = (0, _TestUtils.stringContains)(this.actual, value);\n      } else {\n        (0, _assert2.default)(false, 'The \"actual\" argument in expect(actual).toInclude() must be an array, object, or a string');\n      }\n\n      (0, _assert2.default)(contains, message || 'Expected %s to include %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toExclude',\n    value: function toExclude(value, compareValues, message) {\n      if (typeof compareValues === 'string') {\n        message = compareValues;\n        compareValues = null;\n      }\n\n      if (compareValues == null) compareValues = _TestUtils.isEqual;\n\n      var contains = false;\n\n      if ((0, _TestUtils.isArray)(this.actual)) {\n        contains = (0, _TestUtils.arrayContains)(this.actual, value, compareValues);\n      } else if ((0, _TestUtils.isObject)(this.actual)) {\n        contains = (0, _TestUtils.objectContains)(this.actual, value, compareValues);\n      } else if (typeof this.actual === 'string') {\n        contains = (0, _TestUtils.stringContains)(this.actual, value);\n      } else {\n        (0, _assert2.default)(false, 'The \"actual\" argument in expect(actual).toExclude() must be an array, object, or a string');\n      }\n\n      (0, _assert2.default)(!contains, message || 'Expected %s to exclude %s', this.actual, value);\n\n      return this;\n    }\n  }, {\n    key: 'toIncludeKeys',\n    value: function toIncludeKeys(keys, comparator, message) {\n      var _this = this;\n\n      if (typeof comparator === 'string') {\n        message = comparator;\n        comparator = null;\n      }\n\n      if (comparator == null) comparator = _has2.default;\n\n      (0, _assert2.default)(_typeof(this.actual) === 'object', 'The \"actual\" argument in expect(actual).toIncludeKeys() must be an object, not %s', this.actual);\n\n      (0, _assert2.default)((0, _TestUtils.isArray)(keys), 'The \"keys\" argument in expect(actual).toIncludeKeys(keys) must be an array, not %s', keys);\n\n      var contains = keys.every(function (key) {\n        return comparator(_this.actual, key);\n      });\n\n      (0, _assert2.default)(contains, message || 'Expected %s to include key(s) %s', this.actual, keys.join(', '));\n\n      return this;\n    }\n  }, {\n    key: 'toIncludeKey',\n    value: function toIncludeKey(key) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return this.toIncludeKeys.apply(this, [[key]].concat(args));\n    }\n  }, {\n    key: 'toExcludeKeys',\n    value: function toExcludeKeys(keys, comparator, message) {\n      var _this2 = this;\n\n      if (typeof comparator === 'string') {\n        message = comparator;\n        comparator = null;\n      }\n\n      if (comparator == null) comparator = _has2.default;\n\n      (0, _assert2.default)(_typeof(this.actual) === 'object', 'The \"actual\" argument in expect(actual).toExcludeKeys() must be an object, not %s', this.actual);\n\n      (0, _assert2.default)((0, _TestUtils.isArray)(keys), 'The \"keys\" argument in expect(actual).toIncludeKeys(keys) must be an array, not %s', keys);\n\n      var contains = keys.every(function (key) {\n        return comparator(_this2.actual, key);\n      });\n\n      (0, _assert2.default)(!contains, message || 'Expected %s to exclude key(s) %s', this.actual, keys.join(', '));\n\n      return this;\n    }\n  }, {\n    key: 'toExcludeKey',\n    value: function toExcludeKey(key) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      return this.toExcludeKeys.apply(this, [[key]].concat(args));\n    }\n  }, {\n    key: 'toHaveBeenCalled',\n    value: function toHaveBeenCalled(message) {\n      var spy = this.actual;\n\n      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The \"actual\" argument in expect(actual).toHaveBeenCalled() must be a spy');\n\n      (0, _assert2.default)(spy.calls.length > 0, message || 'spy was not called');\n\n      return this;\n    }\n  }, {\n    key: 'toHaveBeenCalledWith',\n    value: function toHaveBeenCalledWith() {\n      for (var _len3 = arguments.length, expectedArgs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        expectedArgs[_key3] = arguments[_key3];\n      }\n\n      var spy = this.actual;\n\n      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The \"actual\" argument in expect(actual).toHaveBeenCalledWith() must be a spy');\n\n      (0, _assert2.default)(spy.calls.some(function (call) {\n        return (0, _TestUtils.isEqual)(call.arguments, expectedArgs);\n      }), 'spy was never called with %s', expectedArgs);\n\n      return this;\n    }\n  }, {\n    key: 'toNotHaveBeenCalled',\n    value: function toNotHaveBeenCalled(message) {\n      var spy = this.actual;\n\n      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The \"actual\" argument in expect(actual).toNotHaveBeenCalled() must be a spy');\n\n      (0, _assert2.default)(spy.calls.length === 0, message || 'spy was not supposed to be called');\n\n      return this;\n    }\n  }]);\n\n  return Expectation;\n}();\n\nvar deprecate = function deprecate(fn, message) {\n  var alreadyWarned = false;\n\n  return function () {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      console.warn(message);\n    }\n\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return fn.apply(this, args);\n  };\n};\n\nExpectation.prototype.withContext = deprecate(function (context) {\n  (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The \"actual\" argument in expect(actual).withContext() must be a function');\n\n  this.context = context;\n\n  return this;\n}, '\\nwithContext is deprecated; use a closure instead.\\n\\n  expect(fn).withContext(context).toThrow()\\n\\nbecomes\\n\\n  expect(() => fn.call(context)).toThrow()\\n');\n\nExpectation.prototype.withArgs = deprecate(function () {\n  var _args;\n\n  (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The \"actual\" argument in expect(actual).withArgs() must be a function');\n\n  if (arguments.length) this.args = (_args = this.args).concat.apply(_args, arguments);\n\n  return this;\n}, '\\nwithArgs is deprecated; use a closure instead.\\n\\n  expect(fn).withArgs(a, b, c).toThrow()\\n\\nbecomes\\n\\n  expect(() => fn(a, b, c)).toThrow()\\n');\n\nvar aliases = {\n  toBeAn: 'toBeA',\n  toNotBeAn: 'toNotBeA',\n  toBeTruthy: 'toExist',\n  toBeFalsy: 'toNotExist',\n  toBeFewerThan: 'toBeLessThan',\n  toBeMoreThan: 'toBeGreaterThan',\n  toContain: 'toInclude',\n  toNotContain: 'toExclude',\n  toNotInclude: 'toExclude',\n  toContainKeys: 'toIncludeKeys',\n  toNotContainKeys: 'toExcludeKeys',\n  toNotIncludeKeys: 'toExcludeKeys',\n  toContainKey: 'toIncludeKey',\n  toNotContainKey: 'toExcludeKey',\n  toNotIncludeKey: 'toExcludeKey'\n};\n\nfor (var alias in aliases) {\n  if (aliases.hasOwnProperty(alias)) Expectation.prototype[alias] = Expectation.prototype[aliases[alias]];\n}exports.default = Expectation;","/home/travis/build/npmtest/node-npmtest-expect/node_modules/expect/lib/assert.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectInspect = require('object-inspect');\n\nvar _objectInspect2 = _interopRequireDefault(_objectInspect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar formatString = function formatString(string, args) {\n  var index = 0;\n  return string.replace(/%s/g, function () {\n    return (0, _objectInspect2.default)(args[index++]);\n  });\n};\n\nvar assert = function assert(condition, createMessage) {\n  for (var _len = arguments.length, extraArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    extraArgs[_key - 2] = arguments[_key];\n  }\n\n  if (condition) return;\n\n  var message = typeof createMessage === 'string' ? formatString(createMessage, extraArgs) : createMessage(extraArgs);\n\n  throw new Error(message);\n};\n\nexports.default = assert;","/home/travis/build/npmtest/node-npmtest-expect/node_modules/expect/lib/SpyUtils.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.spyOn = exports.createSpy = exports.restoreSpies = exports.isSpy = undefined;\n\nvar _defineProperties = require('define-properties');\n\nvar _assert = require('./assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _TestUtils = require('./TestUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*eslint-disable prefer-rest-params, no-underscore-dangle*/\n\n\nvar noop = function noop() {};\n\nvar supportsConfigurableFnLength = _defineProperties.supportsDescriptors && Object.getOwnPropertyDescriptor(function () {}, 'length').configurable;\n\nvar isSpy = exports.isSpy = function isSpy(object) {\n  return object && object.__isSpy === true;\n};\n\nvar spies = [];\n\nvar restoreSpies = exports.restoreSpies = function restoreSpies() {\n  for (var i = spies.length - 1; i >= 0; i--) {\n    spies[i].restore();\n  }spies = [];\n};\n\nvar createSpy = exports.createSpy = function createSpy(fn) {\n  var restore = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];\n\n  if (fn == null) fn = noop;\n\n  (0, _assert2.default)((0, _TestUtils.isFunction)(fn), 'createSpy needs a function');\n\n  var targetFn = void 0,\n      thrownValue = void 0,\n      returnValue = void 0,\n      spy = void 0;\n\n  function spyLogic() {\n    spy.calls.push({\n      context: this,\n      arguments: Array.prototype.slice.call(arguments, 0)\n    });\n\n    if (targetFn) return targetFn.apply(this, arguments);\n\n    if (thrownValue) throw thrownValue;\n\n    return returnValue;\n  }\n\n  if (supportsConfigurableFnLength) {\n    spy = Object.defineProperty(spyLogic, 'length', { value: fn.length, writable: false, enumerable: false, configurable: true });\n  } else {\n    spy = new Function('spy', 'return function(' + // eslint-disable-line no-new-func\n    [].concat(_toConsumableArray(Array(fn.length))).map(function (_, i) {\n      return '_' + i;\n    }).join(',') + ') {\\n      return spy.apply(this, arguments)\\n    }')(spyLogic);\n  }\n\n  spy.calls = [];\n\n  spy.andCall = function (otherFn) {\n    targetFn = otherFn;\n    return spy;\n  };\n\n  spy.andCallThrough = function () {\n    return spy.andCall(fn);\n  };\n\n  spy.andThrow = function (value) {\n    thrownValue = value;\n    return spy;\n  };\n\n  spy.andReturn = function (value) {\n    returnValue = value;\n    return spy;\n  };\n\n  spy.getLastCall = function () {\n    return spy.calls[spy.calls.length - 1];\n  };\n\n  spy.reset = function () {\n    spy.calls = [];\n  };\n\n  spy.restore = spy.destroy = restore;\n\n  spy.__isSpy = true;\n\n  spies.push(spy);\n\n  return spy;\n};\n\nvar spyOn = exports.spyOn = function spyOn(object, methodName) {\n  var original = object[methodName];\n\n  if (!isSpy(original)) {\n    (0, _assert2.default)((0, _TestUtils.isFunction)(original), 'Cannot spyOn the %s property; it is not a function', methodName);\n\n    object[methodName] = createSpy(original, function () {\n      object[methodName] = original;\n    });\n  }\n\n  return object[methodName];\n};","/home/travis/build/npmtest/node-npmtest-expect/node_modules/expect/lib/TestUtils.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringContains = exports.objectContains = exports.arrayContains = exports.functionThrows = exports.isA = exports.isObject = exports.isArray = exports.isFunction = exports.isEqual = exports.whyNotEqual = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _isRegex = require('is-regex');\n\nvar _isRegex2 = _interopRequireDefault(_isRegex);\n\nvar _why = require('is-equal/why');\n\nvar _why2 = _interopRequireDefault(_why);\n\nvar _objectKeys = require('object-keys');\n\nvar _objectKeys2 = _interopRequireDefault(_objectKeys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the reason why the given arguments are not *conceptually*\n * equal, if any; the empty string otherwise.\n */\nvar whyNotEqual = exports.whyNotEqual = function whyNotEqual(a, b) {\n  return a == b ? '' : (0, _why2.default)(a, b);\n};\n\n/**\n * Returns true if the given arguments are *conceptually* equal.\n */\nvar isEqual = exports.isEqual = function isEqual(a, b) {\n  return whyNotEqual(a, b) === '';\n};\n\n/**\n * Returns true if the given object is a function.\n */\nvar isFunction = exports.isFunction = function isFunction(object) {\n  return typeof object === 'function';\n};\n\n/**\n * Returns true if the given object is an array.\n */\nvar isArray = exports.isArray = function isArray(object) {\n  return Array.isArray(object);\n};\n\n/**\n * Returns true if the given object is an object.\n */\nvar isObject = exports.isObject = function isObject(object) {\n  return object && !isArray(object) && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';\n};\n\n/**\n * Returns true if the given object is an instanceof value\n * or its typeof is the given value.\n */\nvar isA = exports.isA = function isA(object, value) {\n  if (isFunction(value)) return object instanceof value;\n\n  if (value === 'array') return Array.isArray(object);\n\n  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === value;\n};\n\n/**\n * Returns true if the given function throws the given value\n * when invoked. The value may be:\n *\n * - undefined, to merely assert there was a throw\n * - a constructor function, for comparing using instanceof\n * - a regular expression, to compare with the error message\n * - a string, to find in the error message\n */\nvar functionThrows = exports.functionThrows = function functionThrows(fn, context, args, value) {\n  try {\n    fn.apply(context, args);\n  } catch (error) {\n    if (value == null) return true;\n\n    if (isFunction(value) && error instanceof value) return true;\n\n    var message = error.message || error;\n\n    if (typeof message === 'string') {\n      if ((0, _isRegex2.default)(value) && value.test(error.message)) return true;\n\n      if (typeof value === 'string' && message.indexOf(value) !== -1) return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Returns true if the given array contains the value, false\n * otherwise. The compareValues function must return false to\n * indicate a non-match.\n */\nvar arrayContains = exports.arrayContains = function arrayContains(array, value, compareValues) {\n  return array.some(function (item) {\n    return compareValues(item, value) !== false;\n  });\n};\n\nvar ownEnumerableKeys = function ownEnumerableKeys(object) {\n  if ((typeof Reflect === 'undefined' ? 'undefined' : _typeof(Reflect)) === 'object' && typeof Reflect.ownKeys === 'function') {\n    return Reflect.ownKeys(object).filter(function (key) {\n      return Object.getOwnPropertyDescriptor(object, key).enumerable;\n    });\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    return Object.getOwnPropertySymbols(object).filter(function (key) {\n      return Object.getOwnPropertyDescriptor(object, key).enumerable;\n    }).concat((0, _objectKeys2.default)(object));\n  }\n\n  return (0, _objectKeys2.default)(object);\n};\n\n/**\n * Returns true if the given object contains the value, false\n * otherwise. The compareValues function must return false to\n * indicate a non-match.\n */\nvar objectContains = exports.objectContains = function objectContains(object, value, compareValues) {\n  return ownEnumerableKeys(value).every(function (k) {\n    if (isObject(object[k]) && isObject(value[k])) return objectContains(object[k], value[k], compareValues);\n\n    return compareValues(object[k], value[k]);\n  });\n};\n\n/**\n * Returns true if the given string contains the value, false otherwise.\n */\nvar stringContains = exports.stringContains = function stringContains(string, value) {\n  return string.indexOf(value) !== -1;\n};","/home/travis/build/npmtest/node-npmtest-expect/node_modules/expect/lib/extend.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Expectation = require('./Expectation');\n\nvar _Expectation2 = _interopRequireDefault(_Expectation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Extensions = [];\n\nfunction extend(extension) {\n  if (Extensions.indexOf(extension) === -1) {\n    Extensions.push(extension);\n\n    for (var p in extension) {\n      if (extension.hasOwnProperty(p)) _Expectation2.default.prototype[p] = extension[p];\n    }\n  }\n}\n\nexports.default = extend;","/home/travis/build/npmtest/node-npmtest-expect/node_modules/expect/umd/expect.js":"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"expect\"] = factory();\n\telse\n\t\troot[\"expect\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _Expectation = __webpack_require__(1);\n\n\tvar _Expectation2 = _interopRequireDefault(_Expectation);\n\n\tvar _SpyUtils = __webpack_require__(13);\n\n\tvar _assert = __webpack_require__(11);\n\n\tvar _assert2 = _interopRequireDefault(_assert);\n\n\tvar _extend = __webpack_require__(31);\n\n\tvar _extend2 = _interopRequireDefault(_extend);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction expect(actual) {\n\t  return new _Expectation2.default(actual);\n\t}\n\n\texpect.createSpy = _SpyUtils.createSpy;\n\texpect.spyOn = _SpyUtils.spyOn;\n\texpect.isSpy = _SpyUtils.isSpy;\n\texpect.restoreSpies = _SpyUtils.restoreSpies;\n\texpect.assert = _assert2.default;\n\texpect.extend = _extend2.default;\n\n\tmodule.exports = expect;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tvar _has = __webpack_require__(2);\n\n\tvar _has2 = _interopRequireDefault(_has);\n\n\tvar _tmatch = __webpack_require__(5);\n\n\tvar _tmatch2 = _interopRequireDefault(_tmatch);\n\n\tvar _assert = __webpack_require__(11);\n\n\tvar _assert2 = _interopRequireDefault(_assert);\n\n\tvar _SpyUtils = __webpack_require__(13);\n\n\tvar _TestUtils = __webpack_require__(18);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * An Expectation is a wrapper around an assertion that allows it to be written\n\t * in a more natural style, without the need to remember the order of arguments.\n\t * This helps prevent you from making mistakes when writing tests.\n\t */\n\n\tvar Expectation = function () {\n\t  function Expectation(actual) {\n\t    _classCallCheck(this, Expectation);\n\n\t    this.actual = actual;\n\n\t    if ((0, _TestUtils.isFunction)(actual)) {\n\t      this.context = null;\n\t      this.args = [];\n\t    }\n\t  }\n\n\t  _createClass(Expectation, [{\n\t    key: 'toExist',\n\t    value: function toExist(message) {\n\t      (0, _assert2.default)(this.actual, message || 'Expected %s to exist', this.actual);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toNotExist',\n\t    value: function toNotExist(message) {\n\t      (0, _assert2.default)(!this.actual, message || 'Expected %s to not exist', this.actual);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toBe',\n\t    value: function toBe(value, message) {\n\t      (0, _assert2.default)(this.actual === value, message || 'Expected %s to be %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toNotBe',\n\t    value: function toNotBe(value, message) {\n\t      (0, _assert2.default)(this.actual !== value, message || 'Expected %s to not be %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toEqual',\n\t    value: function toEqual(value, message) {\n\t      try {\n\t        (0, _assert2.default)((0, _TestUtils.isEqual)(this.actual, value), message || 'Expected %s to equal %s', this.actual, value);\n\t      } catch (error) {\n\t        // These attributes are consumed by Mocha to produce a diff output.\n\t        error.actual = this.actual;\n\t        error.expected = value;\n\t        error.showDiff = true;\n\t        throw error;\n\t      }\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toNotEqual',\n\t    value: function toNotEqual(value, message) {\n\t      (0, _assert2.default)(!(0, _TestUtils.isEqual)(this.actual, value), message || 'Expected %s to not equal %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toThrow',\n\t    value: function toThrow(value, message) {\n\t      (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The \"actual\" argument in expect(actual).toThrow() must be a function, %s was given', this.actual);\n\n\t      (0, _assert2.default)((0, _TestUtils.functionThrows)(this.actual, this.context, this.args, value), message || 'Expected %s to throw %s', this.actual, value || 'an error');\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toNotThrow',\n\t    value: function toNotThrow(value, message) {\n\t      (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The \"actual\" argument in expect(actual).toNotThrow() must be a function, %s was given', this.actual);\n\n\t      (0, _assert2.default)(!(0, _TestUtils.functionThrows)(this.actual, this.context, this.args, value), message || 'Expected %s to not throw %s', this.actual, value || 'an error');\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toBeA',\n\t    value: function toBeA(value, message) {\n\t      (0, _assert2.default)((0, _TestUtils.isFunction)(value) || typeof value === 'string', 'The \"value\" argument in toBeA(value) must be a function or a string');\n\n\t      (0, _assert2.default)((0, _TestUtils.isA)(this.actual, value), message || 'Expected %s to be a %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toNotBeA',\n\t    value: function toNotBeA(value, message) {\n\t      (0, _assert2.default)((0, _TestUtils.isFunction)(value) || typeof value === 'string', 'The \"value\" argument in toNotBeA(value) must be a function or a string');\n\n\t      (0, _assert2.default)(!(0, _TestUtils.isA)(this.actual, value), message || 'Expected %s to not be a %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toMatch',\n\t    value: function toMatch(pattern, message) {\n\t      (0, _assert2.default)((0, _tmatch2.default)(this.actual, pattern), message || 'Expected %s to match %s', this.actual, pattern);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toNotMatch',\n\t    value: function toNotMatch(pattern, message) {\n\t      (0, _assert2.default)(!(0, _tmatch2.default)(this.actual, pattern), message || 'Expected %s to not match %s', this.actual, pattern);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toBeLessThan',\n\t    value: function toBeLessThan(value, message) {\n\t      (0, _assert2.default)(typeof this.actual === 'number', 'The \"actual\" argument in expect(actual).toBeLessThan() must be a number');\n\n\t      (0, _assert2.default)(typeof value === 'number', 'The \"value\" argument in toBeLessThan(value) must be a number');\n\n\t      (0, _assert2.default)(this.actual < value, message || 'Expected %s to be less than %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toBeLessThanOrEqualTo',\n\t    value: function toBeLessThanOrEqualTo(value, message) {\n\t      (0, _assert2.default)(typeof this.actual === 'number', 'The \"actual\" argument in expect(actual).toBeLessThanOrEqualTo() must be a number');\n\n\t      (0, _assert2.default)(typeof value === 'number', 'The \"value\" argument in toBeLessThanOrEqualTo(value) must be a number');\n\n\t      (0, _assert2.default)(this.actual <= value, message || 'Expected %s to be less than or equal to %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toBeGreaterThan',\n\t    value: function toBeGreaterThan(value, message) {\n\t      (0, _assert2.default)(typeof this.actual === 'number', 'The \"actual\" argument in expect(actual).toBeGreaterThan() must be a number');\n\n\t      (0, _assert2.default)(typeof value === 'number', 'The \"value\" argument in toBeGreaterThan(value) must be a number');\n\n\t      (0, _assert2.default)(this.actual > value, message || 'Expected %s to be greater than %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toBeGreaterThanOrEqualTo',\n\t    value: function toBeGreaterThanOrEqualTo(value, message) {\n\t      (0, _assert2.default)(typeof this.actual === 'number', 'The \"actual\" argument in expect(actual).toBeGreaterThanOrEqualTo() must be a number');\n\n\t      (0, _assert2.default)(typeof value === 'number', 'The \"value\" argument in toBeGreaterThanOrEqualTo(value) must be a number');\n\n\t      (0, _assert2.default)(this.actual >= value, message || 'Expected %s to be greater than or equal to %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toInclude',\n\t    value: function toInclude(value, compareValues, message) {\n\t      if (typeof compareValues === 'string') {\n\t        message = compareValues;\n\t        compareValues = null;\n\t      }\n\n\t      if (compareValues == null) compareValues = _TestUtils.isEqual;\n\n\t      var contains = false;\n\n\t      if ((0, _TestUtils.isArray)(this.actual)) {\n\t        contains = (0, _TestUtils.arrayContains)(this.actual, value, compareValues);\n\t      } else if ((0, _TestUtils.isObject)(this.actual)) {\n\t        contains = (0, _TestUtils.objectContains)(this.actual, value, compareValues);\n\t      } else if (typeof this.actual === 'string') {\n\t        contains = (0, _TestUtils.stringContains)(this.actual, value);\n\t      } else {\n\t        (0, _assert2.default)(false, 'The \"actual\" argument in expect(actual).toInclude() must be an array, object, or a string');\n\t      }\n\n\t      (0, _assert2.default)(contains, message || 'Expected %s to include %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toExclude',\n\t    value: function toExclude(value, compareValues, message) {\n\t      if (typeof compareValues === 'string') {\n\t        message = compareValues;\n\t        compareValues = null;\n\t      }\n\n\t      if (compareValues == null) compareValues = _TestUtils.isEqual;\n\n\t      var contains = false;\n\n\t      if ((0, _TestUtils.isArray)(this.actual)) {\n\t        contains = (0, _TestUtils.arrayContains)(this.actual, value, compareValues);\n\t      } else if ((0, _TestUtils.isObject)(this.actual)) {\n\t        contains = (0, _TestUtils.objectContains)(this.actual, value, compareValues);\n\t      } else if (typeof this.actual === 'string') {\n\t        contains = (0, _TestUtils.stringContains)(this.actual, value);\n\t      } else {\n\t        (0, _assert2.default)(false, 'The \"actual\" argument in expect(actual).toExclude() must be an array, object, or a string');\n\t      }\n\n\t      (0, _assert2.default)(!contains, message || 'Expected %s to exclude %s', this.actual, value);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toIncludeKeys',\n\t    value: function toIncludeKeys(keys, comparator, message) {\n\t      var _this = this;\n\n\t      if (typeof comparator === 'string') {\n\t        message = comparator;\n\t        comparator = null;\n\t      }\n\n\t      if (comparator == null) comparator = _has2.default;\n\n\t      (0, _assert2.default)(_typeof(this.actual) === 'object', 'The \"actual\" argument in expect(actual).toIncludeKeys() must be an object, not %s', this.actual);\n\n\t      (0, _assert2.default)((0, _TestUtils.isArray)(keys), 'The \"keys\" argument in expect(actual).toIncludeKeys(keys) must be an array, not %s', keys);\n\n\t      var contains = keys.every(function (key) {\n\t        return comparator(_this.actual, key);\n\t      });\n\n\t      (0, _assert2.default)(contains, message || 'Expected %s to include key(s) %s', this.actual, keys.join(', '));\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toIncludeKey',\n\t    value: function toIncludeKey(key) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\n\t      return this.toIncludeKeys.apply(this, [[key]].concat(args));\n\t    }\n\t  }, {\n\t    key: 'toExcludeKeys',\n\t    value: function toExcludeKeys(keys, comparator, message) {\n\t      var _this2 = this;\n\n\t      if (typeof comparator === 'string') {\n\t        message = comparator;\n\t        comparator = null;\n\t      }\n\n\t      if (comparator == null) comparator = _has2.default;\n\n\t      (0, _assert2.default)(_typeof(this.actual) === 'object', 'The \"actual\" argument in expect(actual).toExcludeKeys() must be an object, not %s', this.actual);\n\n\t      (0, _assert2.default)((0, _TestUtils.isArray)(keys), 'The \"keys\" argument in expect(actual).toIncludeKeys(keys) must be an array, not %s', keys);\n\n\t      var contains = keys.every(function (key) {\n\t        return comparator(_this2.actual, key);\n\t      });\n\n\t      (0, _assert2.default)(!contains, message || 'Expected %s to exclude key(s) %s', this.actual, keys.join(', '));\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toExcludeKey',\n\t    value: function toExcludeKey(key) {\n\t      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t        args[_key2 - 1] = arguments[_key2];\n\t      }\n\n\t      return this.toExcludeKeys.apply(this, [[key]].concat(args));\n\t    }\n\t  }, {\n\t    key: 'toHaveBeenCalled',\n\t    value: function toHaveBeenCalled(message) {\n\t      var spy = this.actual;\n\n\t      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The \"actual\" argument in expect(actual).toHaveBeenCalled() must be a spy');\n\n\t      (0, _assert2.default)(spy.calls.length > 0, message || 'spy was not called');\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toHaveBeenCalledWith',\n\t    value: function toHaveBeenCalledWith() {\n\t      for (var _len3 = arguments.length, expectedArgs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t        expectedArgs[_key3] = arguments[_key3];\n\t      }\n\n\t      var spy = this.actual;\n\n\t      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The \"actual\" argument in expect(actual).toHaveBeenCalledWith() must be a spy');\n\n\t      (0, _assert2.default)(spy.calls.some(function (call) {\n\t        return (0, _TestUtils.isEqual)(call.arguments, expectedArgs);\n\t      }), 'spy was never called with %s', expectedArgs);\n\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toNotHaveBeenCalled',\n\t    value: function toNotHaveBeenCalled(message) {\n\t      var spy = this.actual;\n\n\t      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The \"actual\" argument in expect(actual).toNotHaveBeenCalled() must be a spy');\n\n\t      (0, _assert2.default)(spy.calls.length === 0, message || 'spy was not supposed to be called');\n\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return Expectation;\n\t}();\n\n\tvar deprecate = function deprecate(fn, message) {\n\t  var alreadyWarned = false;\n\n\t  return function () {\n\t    if (!alreadyWarned) {\n\t      alreadyWarned = true;\n\t      console.warn(message);\n\t    }\n\n\t    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t      args[_key4] = arguments[_key4];\n\t    }\n\n\t    return fn.apply(this, args);\n\t  };\n\t};\n\n\tExpectation.prototype.withContext = deprecate(function (context) {\n\t  (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The \"actual\" argument in expect(actual).withContext() must be a function');\n\n\t  this.context = context;\n\n\t  return this;\n\t}, '\\nwithContext is deprecated; use a closure instead.\\n\\n  expect(fn).withContext(context).toThrow()\\n\\nbecomes\\n\\n  expect(() => fn.call(context)).toThrow()\\n');\n\n\tExpectation.prototype.withArgs = deprecate(function () {\n\t  var _args;\n\n\t  (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The \"actual\" argument in expect(actual).withArgs() must be a function');\n\n\t  if (arguments.length) this.args = (_args = this.args).concat.apply(_args, arguments);\n\n\t  return this;\n\t}, '\\nwithArgs is deprecated; use a closure instead.\\n\\n  expect(fn).withArgs(a, b, c).toThrow()\\n\\nbecomes\\n\\n  expect(() => fn(a, b, c)).toThrow()\\n');\n\n\tvar aliases = {\n\t  toBeAn: 'toBeA',\n\t  toNotBeAn: 'toNotBeA',\n\t  toBeTruthy: 'toExist',\n\t  toBeFalsy: 'toNotExist',\n\t  toBeFewerThan: 'toBeLessThan',\n\t  toBeMoreThan: 'toBeGreaterThan',\n\t  toContain: 'toInclude',\n\t  toNotContain: 'toExclude',\n\t  toNotInclude: 'toExclude',\n\t  toContainKeys: 'toIncludeKeys',\n\t  toNotContainKeys: 'toExcludeKeys',\n\t  toNotIncludeKeys: 'toExcludeKeys',\n\t  toContainKey: 'toIncludeKey',\n\t  toNotContainKey: 'toExcludeKey',\n\t  toNotIncludeKey: 'toExcludeKey'\n\t};\n\n\tfor (var alias in aliases) {\n\t  if (aliases.hasOwnProperty(alias)) Expectation.prototype[alias] = Expectation.prototype[aliases[alias]];\n\t}exports.default = Expectation;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar bind = __webpack_require__(3);\n\n\tmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar implementation = __webpack_require__(4);\n\n\tmodule.exports = Function.prototype.bind || implementation;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\n\tvar slice = Array.prototype.slice;\n\tvar toStr = Object.prototype.toString;\n\tvar funcType = '[object Function]';\n\n\tmodule.exports = function bind(that) {\n\t    var target = this;\n\t    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n\t        throw new TypeError(ERROR_MESSAGE + target);\n\t    }\n\t    var args = slice.call(arguments, 1);\n\n\t    var bound;\n\t    var binder = function () {\n\t        if (this instanceof bound) {\n\t            var result = target.apply(\n\t                this,\n\t                args.concat(slice.call(arguments))\n\t            );\n\t            if (Object(result) === result) {\n\t                return result;\n\t            }\n\t            return this;\n\t        } else {\n\t            return target.apply(\n\t                that,\n\t                args.concat(slice.call(arguments))\n\t            );\n\t        }\n\t    };\n\n\t    var boundLength = Math.max(0, target.length - args.length);\n\t    var boundArgs = [];\n\t    for (var i = 0; i < boundLength; i++) {\n\t        boundArgs.push('$' + i);\n\t    }\n\n\t    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n\t    if (target.prototype) {\n\t        var Empty = function Empty() {};\n\t        Empty.prototype = target.prototype;\n\t        bound.prototype = new Empty();\n\t        Empty.prototype = null;\n\t    }\n\n\t    return bound;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, Buffer) {'use strict'\n\n\tfunction isArguments (obj) {\n\t  return Object.prototype.toString.call(obj) === '[object Arguments]'\n\t}\n\n\tmodule.exports = match\n\n\tfunction match (obj, pattern) {\n\t  return match_(obj, pattern, [], [])\n\t}\n\n\t/* istanbul ignore next */\n\tvar log = (/\\btmatch\\b/.test(process.env.NODE_DEBUG || '')) ?\n\t  console.error : function () {}\n\n\tfunction match_ (obj, pattern, ca, cb) {\n\t  log('TMATCH', typeof obj, pattern)\n\t  if (obj == pattern) {\n\t    log('TMATCH same object or simple value, or problem')\n\t    // if one is object, and the other isn't, then this is bogus\n\t    if (obj === null || pattern === null) {\n\t      return true\n\n\t    } else if (typeof obj === 'object' && typeof pattern === 'object') {\n\t      return true\n\n\t    } else if (typeof obj === 'object' && typeof pattern !== 'object') {\n\t      return false\n\n\t    } else if (typeof obj !== 'object' && typeof pattern === 'object') {\n\t      return false\n\n\t    } else {\n\t      return true\n\t    }\n\n\t  } else if (obj === null || pattern === null) {\n\t    log('TMATCH null test, already failed ==')\n\t    return false\n\n\t  } else if (typeof obj === 'string' && pattern instanceof RegExp) {\n\t    log('TMATCH string~=regexp test')\n\t    return pattern.test(obj)\n\n\t  } else if (typeof obj === 'string' && typeof pattern === 'string' && pattern) {\n\t    log('TMATCH string~=string test')\n\t    return obj.indexOf(pattern) !== -1\n\n\t  } else if (obj instanceof Date && pattern instanceof Date) {\n\t    log('TMATCH date test')\n\t    return obj.getTime() === pattern.getTime()\n\n\t  } else if (obj instanceof Date && typeof pattern === 'string') {\n\t    log('TMATCH date~=string test')\n\t    return obj.getTime() === new Date(pattern).getTime()\n\n\t  } else if (isArguments(obj) || isArguments(pattern)) {\n\t    log('TMATCH arguments test')\n\t    var slice = Array.prototype.slice\n\t    return match_(slice.call(obj), slice.call(pattern), ca, cb)\n\n\t  } else if (pattern === Buffer) {\n\t    log('TMATCH Buffer ctor')\n\t    return Buffer.isBuffer(obj)\n\n\t  } else if (pattern === Function) {\n\t    log('TMATCH Function ctor')\n\t    return typeof obj === 'function'\n\n\t  } else if (pattern === Number) {\n\t    log('TMATCH Number ctor (finite, not NaN)')\n\t    return typeof obj === 'number' && obj === obj && isFinite(obj)\n\n\t  } else if (pattern !== pattern) {\n\t    log('TMATCH NaN')\n\t    return obj !== obj\n\n\t  } else if (pattern === String) {\n\t    log('TMATCH String ctor')\n\t    return typeof obj === 'string'\n\n\t  } else if (pattern === Boolean) {\n\t    log('TMATCH Boolean ctor')\n\t    return typeof obj === 'boolean'\n\n\t  } else if (pattern === Array) {\n\t    log('TMATCH Array ctor', pattern, Array.isArray(obj))\n\t    return Array.isArray(obj)\n\n\t  } else if (typeof pattern === 'function' && typeof obj === 'object') {\n\t    log('TMATCH object~=function')\n\t    return obj instanceof pattern\n\n\t  } else if (typeof obj !== 'object' || typeof pattern !== 'object') {\n\t    log('TMATCH obj is not object, pattern is not object, false')\n\t    return false\n\n\t  } else if (obj instanceof RegExp && pattern instanceof RegExp) {\n\t    log('TMATCH regexp~=regexp test')\n\t    return obj.source === pattern.source &&\n\t      obj.global === pattern.global &&\n\t      obj.multiline === pattern.multiline &&\n\t      obj.lastIndex === pattern.lastIndex &&\n\t      obj.ignoreCase === pattern.ignoreCase\n\n\t  } else if (Buffer.isBuffer(obj) && Buffer.isBuffer(pattern)) {\n\t    log('TMATCH buffer test')\n\t    if (obj.equals) {\n\t      return obj.equals(pattern)\n\t    } else {\n\t      if (obj.length !== pattern.length) return false\n\n\t      for (var j = 0; j < obj.length; j++) if (obj[j] != pattern[j]) return false\n\n\t      return true\n\t    }\n\n\t  } else {\n\t    // both are objects.  interesting case!\n\t    log('TMATCH object~=object test')\n\t    var kobj = Object.keys(obj)\n\t    var kpat = Object.keys(pattern)\n\t    log('  TMATCH patternkeys=%j objkeys=%j', kpat, kobj)\n\n\t    // don't bother with stack acrobatics if there's nothing there\n\t    if (kobj.length === 0 && kpat.length === 0) return true\n\n\t    // if we've seen this exact pattern and object already, then\n\t    // it means that pattern and obj have matching cyclicalness\n\t    // however, non-cyclical patterns can match cyclical objects\n\t    log('  TMATCH check seen objects...')\n\t    var cal = ca.length\n\t    while (cal--) if (ca[cal] === obj && cb[cal] === pattern) return true\n\t    ca.push(obj); cb.push(pattern)\n\t    log('  TMATCH not seen previously')\n\n\t    var key\n\t    for (var l = kpat.length - 1; l >= 0; l--) {\n\t      key = kpat[l]\n\t      log('  TMATCH test obj[%j]', key, obj[key], pattern[key])\n\t      if (!match_(obj[key], pattern[key], ca, cb)) return false\n\t    }\n\n\t    ca.pop()\n\t    cb.pop()\n\n\t    log('  TMATCH object pass')\n\t    return true\n\t  }\n\n\t  /* istanbul ignore next */\n\t  throw new Error('impossible to reach this point')\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(7).Buffer))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\n\tfunction noop() {}\n\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\n\t'use strict'\n\n\tvar base64 = __webpack_require__(8)\n\tvar ieee754 = __webpack_require__(9)\n\tvar isArray = __webpack_require__(10)\n\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\tBuffer.poolSize = 8192 // not used by this implementation\n\n\tvar rootParent = {}\n\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n\t *     on objects.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\n\tfunction typedArraySupport () {\n\t  function Bar () {}\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.foo = function () { return 42 }\n\t    arr.constructor = Bar\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        arr.constructor === Bar && // constructor can be set\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\n\t/**\n\t * Class: Buffer\n\t * =============\n\t *\n\t * The Buffer constructor returns instances of `Uint8Array` that are augmented\n\t * with function properties for all the node `Buffer` API functions. We use\n\t * `Uint8Array` so that square bracket notation works as expected -- it returns\n\t * a single octet.\n\t *\n\t * By augmenting the instances, we can avoid modifying the `Uint8Array`\n\t * prototype.\n\t */\n\tfunction Buffer (arg) {\n\t  if (!(this instanceof Buffer)) {\n\t    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n\t    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n\t    return new Buffer(arg)\n\t  }\n\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this.length = 0\n\t    this.parent = undefined\n\t  }\n\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    return fromNumber(this, arg)\n\t  }\n\n\t  // Slightly less common case.\n\t  if (typeof arg === 'string') {\n\t    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n\t  }\n\n\t  // Unusual.\n\t  return fromObject(this, arg)\n\t}\n\n\tfunction fromNumber (that, length) {\n\t  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < length; i++) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n\t  // Assumption: byteLength() return value is always < kMaxLength.\n\t  var length = byteLength(string, encoding) | 0\n\t  that = allocate(that, length)\n\n\t  that.write(string, encoding)\n\t  return that\n\t}\n\n\tfunction fromObject (that, object) {\n\t  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n\t  if (isArray(object)) return fromArray(that, object)\n\n\t  if (object == null) {\n\t    throw new TypeError('must start with number, buffer, array or string')\n\t  }\n\n\t  if (typeof ArrayBuffer !== 'undefined') {\n\t    if (object.buffer instanceof ArrayBuffer) {\n\t      return fromTypedArray(that, object)\n\t    }\n\t    if (object instanceof ArrayBuffer) {\n\t      return fromArrayBuffer(that, object)\n\t    }\n\t  }\n\n\t  if (object.length) return fromArrayLike(that, object)\n\n\t  return fromJsonObject(that, object)\n\t}\n\n\tfunction fromBuffer (that, buffer) {\n\t  var length = checked(buffer.length) | 0\n\t  that = allocate(that, length)\n\t  buffer.copy(that, 0, 0, length)\n\t  return that\n\t}\n\n\tfunction fromArray (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\t// Duplicate of fromArray() to keep fromArray() monomorphic.\n\tfunction fromTypedArray (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  // Truncating the elements is probably not what people expect from typed\n\t  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n\t  // of the old Buffer constructor.\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\tfunction fromArrayBuffer (that, array) {\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    array.byteLength\n\t    that = Buffer._augment(new Uint8Array(array))\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromTypedArray(that, new Uint8Array(array))\n\t  }\n\t  return that\n\t}\n\n\tfunction fromArrayLike (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\t// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n\t// Returns a zero-length buffer for inputs that don't conform to the spec.\n\tfunction fromJsonObject (that, object) {\n\t  var array\n\t  var length = 0\n\n\t  if (object.type === 'Buffer' && isArray(object.data)) {\n\t    array = object.data\n\t    length = checked(array.length) | 0\n\t  }\n\t  that = allocate(that, length)\n\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t} else {\n\t  // pre-set for values that may exist in the future\n\t  Buffer.prototype.length = undefined\n\t  Buffer.prototype.parent = undefined\n\t}\n\n\tfunction allocate (that, length) {\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = Buffer._augment(new Uint8Array(length))\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that.length = length\n\t    that._isBuffer = true\n\t  }\n\n\t  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n\t  if (fromPool) that.parent = rootParent\n\n\t  return that\n\t}\n\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\n\tfunction SlowBuffer (subject, encoding) {\n\t  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n\t  var buf = new Buffer(subject, encoding)\n\t  delete buf.parent\n\t  return buf\n\t}\n\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\n\t  if (a === b) return 0\n\n\t  var x = a.length\n\t  var y = b.length\n\n\t  var i = 0\n\t  var len = Math.min(x, y)\n\t  while (i < len) {\n\t    if (a[i] !== b[i]) break\n\n\t    ++i\n\t  }\n\n\t  if (i !== len) {\n\t    x = a[i]\n\t    y = b[i]\n\t  }\n\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'raw':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n\t  if (list.length === 0) {\n\t    return new Buffer(0)\n\t  }\n\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; i++) {\n\t      length += list[i].length\n\t    }\n\t  }\n\n\t  var buf = new Buffer(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; i++) {\n\t    var item = list[i]\n\t    item.copy(buf, pos)\n\t    pos += item.length\n\t  }\n\t  return buf\n\t}\n\n\tfunction byteLength (string, encoding) {\n\t  if (typeof string !== 'string') string = '' + string\n\n\t  var len = string.length\n\t  if (len === 0) return 0\n\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'binary':\n\t      // Deprecated\n\t      case 'raw':\n\t      case 'raws':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\n\t  start = start | 0\n\t  end = end === undefined || end === Infinity ? this.length : end | 0\n\n\t  if (!encoding) encoding = 'utf8'\n\t  if (start < 0) start = 0\n\t  if (end > this.length) end = this.length\n\t  if (end <= start) return ''\n\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\n\t      case 'binary':\n\t        return binarySlice(this, start, end)\n\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\n\tBuffer.prototype.compare = function compare (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return 0\n\t  return Buffer.compare(this, b)\n\t}\n\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n\t  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n\t  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n\t  byteOffset >>= 0\n\n\t  if (this.length === 0) return -1\n\t  if (byteOffset >= this.length) return -1\n\n\t  // Negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n\t  if (typeof val === 'string') {\n\t    if (val.length === 0) return -1 // special case: looking for empty string always fails\n\t    return String.prototype.indexOf.call(this, val, byteOffset)\n\t  }\n\t  if (Buffer.isBuffer(val)) {\n\t    return arrayIndexOf(this, val, byteOffset)\n\t  }\n\t  if (typeof val === 'number') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n\t      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n\t    }\n\t    return arrayIndexOf(this, [ val ], byteOffset)\n\t  }\n\n\t  function arrayIndexOf (arr, val, byteOffset) {\n\t    var foundIndex = -1\n\t    for (var i = 0; byteOffset + i < arr.length; i++) {\n\t      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n\t      } else {\n\t        foundIndex = -1\n\t      }\n\t    }\n\t    return -1\n\t  }\n\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\n\t// `get` is deprecated\n\tBuffer.prototype.get = function get (offset) {\n\t  console.log('.get() is deprecated. Access using array indexes instead.')\n\t  return this.readUInt8(offset)\n\t}\n\n\t// `set` is deprecated\n\tBuffer.prototype.set = function set (v, offset) {\n\t  console.log('.set() is deprecated. Access using array indexes instead.')\n\t  return this.writeUInt8(v, offset)\n\t}\n\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; i++) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) throw new Error('Invalid hex string')\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\n\tfunction binaryWrite (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    var swap = encoding\n\t    encoding = offset\n\t    offset = length | 0\n\t    length = swap\n\t  }\n\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('attempt to write outside buffer bounds')\n\t  }\n\n\t  if (!encoding) encoding = 'utf8'\n\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\n\t      case 'binary':\n\t        return binaryWrite(this, string, offset, length)\n\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\n\t  return decodeCodePointsArray(res)\n\t}\n\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\n\tfunction binarySlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\n\t  var out = ''\n\t  for (var i = start; i < end; i++) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\n\t  if (end < start) end = start\n\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = Buffer._augment(this.subarray(start, end))\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; i++) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\n\t  if (newBuf.length) newBuf.parent = this.parent || this\n\n\t  return newBuf\n\t}\n\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n\t  return val\n\t}\n\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t}\n\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\n\t  return offset + byteLength\n\t}\n\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t  if (offset < 0) throw new RangeError('index out of range')\n\t}\n\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\n\t  var len = end - start\n\t  var i\n\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; i--) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; i++) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    target._set(this.subarray(start, start + len), targetStart)\n\t  }\n\n\t  return len\n\t}\n\n\t// fill(value, start=0, end=buffer.length)\n\tBuffer.prototype.fill = function fill (value, start, end) {\n\t  if (!value) value = 0\n\t  if (!start) start = 0\n\t  if (!end) end = this.length\n\n\t  if (end < start) throw new RangeError('end < start')\n\n\t  // Fill 0 bytes; we're done\n\t  if (end === start) return\n\t  if (this.length === 0) return\n\n\t  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n\t  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n\t  var i\n\t  if (typeof value === 'number') {\n\t    for (i = start; i < end; i++) {\n\t      this[i] = value\n\t    }\n\t  } else {\n\t    var bytes = utf8ToBytes(value.toString())\n\t    var len = bytes.length\n\t    for (i = start; i < end; i++) {\n\t      this[i] = bytes[i % len]\n\t    }\n\t  }\n\n\t  return this\n\t}\n\n\t/**\n\t * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n\t * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n\t */\n\tBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n\t  if (typeof Uint8Array !== 'undefined') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t      return (new Buffer(this)).buffer\n\t    } else {\n\t      var buf = new Uint8Array(this.length)\n\t      for (var i = 0, len = buf.length; i < len; i += 1) {\n\t        buf[i] = this[i]\n\t      }\n\t      return buf.buffer\n\t    }\n\t  } else {\n\t    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n\t  }\n\t}\n\n\t// HELPER FUNCTIONS\n\t// ================\n\n\tvar BP = Buffer.prototype\n\n\t/**\n\t * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n\t */\n\tBuffer._augment = function _augment (arr) {\n\t  arr.constructor = Buffer\n\t  arr._isBuffer = true\n\n\t  // save reference to original Uint8Array set method before overwriting\n\t  arr._set = arr.set\n\n\t  // deprecated\n\t  arr.get = BP.get\n\t  arr.set = BP.set\n\n\t  arr.write = BP.write\n\t  arr.toString = BP.toString\n\t  arr.toLocaleString = BP.toString\n\t  arr.toJSON = BP.toJSON\n\t  arr.equals = BP.equals\n\t  arr.compare = BP.compare\n\t  arr.indexOf = BP.indexOf\n\t  arr.copy = BP.copy\n\t  arr.slice = BP.slice\n\t  arr.readUIntLE = BP.readUIntLE\n\t  arr.readUIntBE = BP.readUIntBE\n\t  arr.readUInt8 = BP.readUInt8\n\t  arr.readUInt16LE = BP.readUInt16LE\n\t  arr.readUInt16BE = BP.readUInt16BE\n\t  arr.readUInt32LE = BP.readUInt32LE\n\t  arr.readUInt32BE = BP.readUInt32BE\n\t  arr.readIntLE = BP.readIntLE\n\t  arr.readIntBE = BP.readIntBE\n\t  arr.readInt8 = BP.readInt8\n\t  arr.readInt16LE = BP.readInt16LE\n\t  arr.readInt16BE = BP.readInt16BE\n\t  arr.readInt32LE = BP.readInt32LE\n\t  arr.readInt32BE = BP.readInt32BE\n\t  arr.readFloatLE = BP.readFloatLE\n\t  arr.readFloatBE = BP.readFloatBE\n\t  arr.readDoubleLE = BP.readDoubleLE\n\t  arr.readDoubleBE = BP.readDoubleBE\n\t  arr.writeUInt8 = BP.writeUInt8\n\t  arr.writeUIntLE = BP.writeUIntLE\n\t  arr.writeUIntBE = BP.writeUIntBE\n\t  arr.writeUInt16LE = BP.writeUInt16LE\n\t  arr.writeUInt16BE = BP.writeUInt16BE\n\t  arr.writeUInt32LE = BP.writeUInt32LE\n\t  arr.writeUInt32BE = BP.writeUInt32BE\n\t  arr.writeIntLE = BP.writeIntLE\n\t  arr.writeIntBE = BP.writeIntBE\n\t  arr.writeInt8 = BP.writeInt8\n\t  arr.writeInt16LE = BP.writeInt16LE\n\t  arr.writeInt16BE = BP.writeInt16BE\n\t  arr.writeInt32LE = BP.writeInt32LE\n\t  arr.writeInt32BE = BP.writeInt32BE\n\t  arr.writeFloatLE = BP.writeFloatLE\n\t  arr.writeFloatBE = BP.writeFloatBE\n\t  arr.writeDoubleLE = BP.writeDoubleLE\n\t  arr.writeDoubleBE = BP.writeDoubleBE\n\t  arr.fill = BP.fill\n\t  arr.inspect = BP.inspect\n\t  arr.toArrayBuffer = BP.toArrayBuffer\n\n\t  return arr\n\t}\n\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\n\t  for (var i = 0; i < length; i++) {\n\t    codePoint = string.charCodeAt(i)\n\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\n\t        continue\n\t      }\n\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\n\t    leadSurrogate = null\n\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\n\t  return bytes\n\t}\n\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    if ((units -= 2) < 0) break\n\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\n\t  return byteArray\n\t}\n\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; i++) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7).Buffer, (function() { return this; }())))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t;(function (exports) {\n\t\t'use strict';\n\n\t  var Arr = (typeof Uint8Array !== 'undefined')\n\t    ? Uint8Array\n\t    : Array\n\n\t\tvar PLUS   = '+'.charCodeAt(0)\n\t\tvar SLASH  = '/'.charCodeAt(0)\n\t\tvar NUMBER = '0'.charCodeAt(0)\n\t\tvar LOWER  = 'a'.charCodeAt(0)\n\t\tvar UPPER  = 'A'.charCodeAt(0)\n\t\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\t\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\t\tfunction decode (elt) {\n\t\t\tvar code = elt.charCodeAt(0)\n\t\t\tif (code === PLUS ||\n\t\t\t    code === PLUS_URL_SAFE)\n\t\t\t\treturn 62 // '+'\n\t\t\tif (code === SLASH ||\n\t\t\t    code === SLASH_URL_SAFE)\n\t\t\t\treturn 63 // '/'\n\t\t\tif (code < NUMBER)\n\t\t\t\treturn -1 //no match\n\t\t\tif (code < NUMBER + 10)\n\t\t\t\treturn code - NUMBER + 26 + 26\n\t\t\tif (code < UPPER + 26)\n\t\t\t\treturn code - UPPER\n\t\t\tif (code < LOWER + 26)\n\t\t\t\treturn code - LOWER + 26\n\t\t}\n\n\t\tfunction b64ToByteArray (b64) {\n\t\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\t\tif (b64.length % 4 > 0) {\n\t\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t\t}\n\n\t\t\t// the number of equal signs (place holders)\n\t\t\t// if there are two placeholders, than the two characters before it\n\t\t\t// represent one byte\n\t\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t\t// this is just a cheap hack to not do indexOf twice\n\t\t\tvar len = b64.length\n\t\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t\t// base64 is 4/3 + up to two characters of the original data\n\t\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\t\tvar L = 0\n\n\t\t\tfunction push (v) {\n\t\t\t\tarr[L++] = v\n\t\t\t}\n\n\t\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\n\t\t\tif (placeHolders === 2) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t} else if (placeHolders === 1) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\n\t\t\treturn arr\n\t\t}\n\n\t\tfunction uint8ToBase64 (uint8) {\n\t\t\tvar i,\n\t\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\t\toutput = \"\",\n\t\t\t\ttemp, length\n\n\t\t\tfunction encode (num) {\n\t\t\t\treturn lookup.charAt(num)\n\t\t\t}\n\n\t\t\tfunction tripletToBase64 (num) {\n\t\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t\t}\n\n\t\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\t\toutput += tripletToBase64(temp)\n\t\t\t}\n\n\t\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\t\tswitch (extraBytes) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\t\toutput += '=='\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\t\toutput += '='\n\t\t\t\t\tbreak\n\t\t\t}\n\n\t\t\treturn output\n\t\t}\n\n\t\texports.toByteArray = b64ToByteArray\n\t\texports.fromByteArray = uint8ToBase64\n\t}( false ? (this.base64js = {}) : exports))\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\n\t  i += d\n\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n\t  value = Math.abs(value)\n\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _objectInspect = __webpack_require__(12);\n\n\tvar _objectInspect2 = _interopRequireDefault(_objectInspect);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar formatString = function formatString(string, args) {\n\t  var index = 0;\n\t  return string.replace(/%s/g, function () {\n\t    return (0, _objectInspect2.default)(args[index++]);\n\t  });\n\t};\n\n\tvar assert = function assert(condition, createMessage) {\n\t  for (var _len = arguments.length, extraArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t    extraArgs[_key - 2] = arguments[_key];\n\t  }\n\n\t  if (condition) return;\n\n\t  var message = typeof createMessage === 'string' ? formatString(createMessage, extraArgs) : createMessage(extraArgs);\n\n\t  throw new Error(message);\n\t};\n\n\texports.default = assert;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tvar hasMap = typeof Map === 'function' && Map.prototype;\n\tvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\n\tvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\n\tvar mapForEach = hasMap && Map.prototype.forEach;\n\tvar hasSet = typeof Set === 'function' && Set.prototype;\n\tvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\n\tvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\n\tvar setForEach = hasSet && Set.prototype.forEach;\n\tvar booleanValueOf = Boolean.prototype.valueOf;\n\n\tmodule.exports = function inspect_ (obj, opts, depth, seen) {\n\t    if (!opts) opts = {};\n\t    \n\t    var maxDepth = opts.depth === undefined ? 5 : opts.depth;\n\t    if (depth === undefined) depth = 0;\n\t    if (depth >= maxDepth && maxDepth > 0 && obj && typeof obj === 'object') {\n\t        return '[Object]';\n\t    }\n\t    \n\t    if (seen === undefined) seen = [];\n\t    else if (indexOf(seen, obj) >= 0) {\n\t        return '[Circular]';\n\t    }\n\t    \n\t    function inspect (value, from) {\n\t        if (from) {\n\t            seen = seen.slice();\n\t            seen.push(from);\n\t        }\n\t        return inspect_(value, opts, depth + 1, seen);\n\t    }\n\t    \n\t    if (typeof obj === 'string') {\n\t        return inspectString(obj);\n\t    }\n\t    else if (typeof obj === 'function') {\n\t        var name = nameOf(obj);\n\t        return '[Function' + (name ? ': ' + name : '') + ']';\n\t    }\n\t    else if (obj === null) {\n\t        return 'null';\n\t    }\n\t    else if (isSymbol(obj)) {\n\t        var symString = Symbol.prototype.toString.call(obj);\n\t        return typeof obj === 'object' ? 'Object(' + symString + ')' : symString;\n\t    }\n\t    else if (isElement(obj)) {\n\t        var s = '<' + String(obj.nodeName).toLowerCase();\n\t        var attrs = obj.attributes || [];\n\t        for (var i = 0; i < attrs.length; i++) {\n\t            s += ' ' + attrs[i].name + '=\"' + quote(attrs[i].value) + '\"';\n\t        }\n\t        s += '>';\n\t        if (obj.childNodes && obj.childNodes.length) s += '...';\n\t        s += '</' + String(obj.nodeName).toLowerCase() + '>';\n\t        return s;\n\t    }\n\t    else if (isArray(obj)) {\n\t        if (obj.length === 0) return '[]';\n\t        var xs = Array(obj.length);\n\t        for (var i = 0; i < obj.length; i++) {\n\t            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n\t        }\n\t        return '[ ' + xs.join(', ') + ' ]';\n\t    }\n\t    else if (isError(obj)) {\n\t        var parts = [];\n\t        for (var key in obj) {\n\t            if (!has(obj, key)) continue;\n\t            \n\t            if (/[^\\w$]/.test(key)) {\n\t                parts.push(inspect(key) + ': ' + inspect(obj[key]));\n\t            }\n\t            else {\n\t                parts.push(key + ': ' + inspect(obj[key]));\n\t            }\n\t        }\n\t        if (parts.length === 0) return '[' + obj + ']';\n\t        return '{ [' + obj + '] ' + parts.join(', ') + ' }';\n\t    }\n\t    else if (typeof obj === 'object' && typeof obj.inspect === 'function') {\n\t        return obj.inspect();\n\t    }\n\t    else if (isMap(obj)) {\n\t        var parts = [];\n\t        mapForEach.call(obj, function (value, key) {\n\t            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));\n\t        });\n\t        return 'Map (' + mapSize.call(obj) + ') {' + parts.join(', ') + '}';\n\t    }\n\t    else if (isSet(obj)) {\n\t        var parts = [];\n\t        setForEach.call(obj, function (value ) {\n\t            parts.push(inspect(value, obj));\n\t        });\n\t        return 'Set (' + setSize.call(obj) + ') {' + parts.join(', ') + '}';\n\t    }\n\t    else if (typeof obj !== 'object') {\n\t        return String(obj);\n\t    }\n\t    else if (isNumber(obj)) {\n\t        return 'Object(' + Number(obj) + ')';\n\t    }\n\t    else if (isBoolean(obj)) {\n\t        return 'Object(' + booleanValueOf.call(obj) + ')';\n\t    }\n\t    else if (isString(obj)) {\n\t        return 'Object(' + inspect(String(obj)) + ')';\n\t    }\n\t    else if (!isDate(obj) && !isRegExp(obj)) {\n\t        var xs = [], keys = [];\n\t        for (var key in obj) {\n\t            if (has(obj, key)) keys.push(key);\n\t        }\n\t        keys.sort();\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i];\n\t            if (/[^\\w$]/.test(key)) {\n\t                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));\n\t            }\n\t            else xs.push(key + ': ' + inspect(obj[key], obj));\n\t        }\n\t        if (xs.length === 0) return '{}';\n\t        return '{ ' + xs.join(', ') + ' }';\n\t    }\n\t    else return String(obj);\n\t};\n\n\tfunction quote (s) {\n\t    return String(s).replace(/\"/g, '&quot;');\n\t}\n\n\tfunction isArray (obj) { return toStr(obj) === '[object Array]' }\n\tfunction isDate (obj) { return toStr(obj) === '[object Date]' }\n\tfunction isRegExp (obj) { return toStr(obj) === '[object RegExp]' }\n\tfunction isError (obj) { return toStr(obj) === '[object Error]' }\n\tfunction isSymbol (obj) { return toStr(obj) === '[object Symbol]' }\n\tfunction isString (obj) { return toStr(obj) === '[object String]' }\n\tfunction isNumber (obj) { return toStr(obj) === '[object Number]' }\n\tfunction isBoolean (obj) { return toStr(obj) === '[object Boolean]' }\n\n\tvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\n\tfunction has (obj, key) {\n\t    return hasOwn.call(obj, key);\n\t}\n\n\tfunction toStr (obj) {\n\t    return Object.prototype.toString.call(obj);\n\t}\n\n\tfunction nameOf (f) {\n\t    if (f.name) return f.name;\n\t    var m = f.toString().match(/^function\\s*([\\w$]+)/);\n\t    if (m) return m[1];\n\t}\n\n\tfunction indexOf (xs, x) {\n\t    if (xs.indexOf) return xs.indexOf(x);\n\t    for (var i = 0, l = xs.length; i < l; i++) {\n\t        if (xs[i] === x) return i;\n\t    }\n\t    return -1;\n\t}\n\n\tfunction isMap (x) {\n\t    if (!mapSize) {\n\t        return false;\n\t    }\n\t    try {\n\t        mapSize.call(x);\n\t        return true;\n\t    } catch (e) {}\n\t    return false;\n\t}\n\n\tfunction isSet (x) {\n\t    if (!setSize) {\n\t        return false;\n\t    }\n\t    try {\n\t        setSize.call(x);\n\t        return true;\n\t    } catch (e) {}\n\t    return false;\n\t}\n\n\tfunction isElement (x) {\n\t    if (!x || typeof x !== 'object') return false;\n\t    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n\t        return true;\n\t    }\n\t    return typeof x.nodeName === 'string'\n\t        && typeof x.getAttribute === 'function'\n\t    ;\n\t}\n\n\tfunction inspectString (str) {\n\t    var s = str.replace(/(['\\\\])/g, '\\\\$1').replace(/[\\x00-\\x1f]/g, lowbyte);\n\t    return \"'\" + s + \"'\";\n\t    \n\t    function lowbyte (c) {\n\t        var n = c.charCodeAt(0);\n\t        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];\n\t        if (x) return '\\\\' + x;\n\t        return '\\\\x' + (n < 0x10 ? '0' : '') + n.toString(16);\n\t    }\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.spyOn = exports.createSpy = exports.restoreSpies = exports.isSpy = undefined;\n\n\tvar _defineProperties = __webpack_require__(14);\n\n\tvar _assert = __webpack_require__(11);\n\n\tvar _assert2 = _interopRequireDefault(_assert);\n\n\tvar _TestUtils = __webpack_require__(18);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*eslint-disable prefer-rest-params, no-underscore-dangle*/\n\n\n\tvar noop = function noop() {};\n\n\tvar supportsConfigurableFnLength = _defineProperties.supportsDescriptors && Object.getOwnPropertyDescriptor(function () {}, 'length').configurable;\n\n\tvar isSpy = exports.isSpy = function isSpy(object) {\n\t  return object && object.__isSpy === true;\n\t};\n\n\tvar spies = [];\n\n\tvar restoreSpies = exports.restoreSpies = function restoreSpies() {\n\t  for (var i = spies.length - 1; i >= 0; i--) {\n\t    spies[i].restore();\n\t  }spies = [];\n\t};\n\n\tvar createSpy = exports.createSpy = function createSpy(fn) {\n\t  var restore = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];\n\n\t  if (fn == null) fn = noop;\n\n\t  (0, _assert2.default)((0, _TestUtils.isFunction)(fn), 'createSpy needs a function');\n\n\t  var targetFn = void 0,\n\t      thrownValue = void 0,\n\t      returnValue = void 0,\n\t      spy = void 0;\n\n\t  function spyLogic() {\n\t    spy.calls.push({\n\t      context: this,\n\t      arguments: Array.prototype.slice.call(arguments, 0)\n\t    });\n\n\t    if (targetFn) return targetFn.apply(this, arguments);\n\n\t    if (thrownValue) throw thrownValue;\n\n\t    return returnValue;\n\t  }\n\n\t  if (supportsConfigurableFnLength) {\n\t    spy = Object.defineProperty(spyLogic, 'length', { value: fn.length, writable: false, enumerable: false, configurable: true });\n\t  } else {\n\t    spy = new Function('spy', 'return function(' + // eslint-disable-line no-new-func\n\t    [].concat(_toConsumableArray(Array(fn.length))).map(function (_, i) {\n\t      return '_' + i;\n\t    }).join(',') + ') {\\n      return spy.apply(this, arguments)\\n    }')(spyLogic);\n\t  }\n\n\t  spy.calls = [];\n\n\t  spy.andCall = function (otherFn) {\n\t    targetFn = otherFn;\n\t    return spy;\n\t  };\n\n\t  spy.andCallThrough = function () {\n\t    return spy.andCall(fn);\n\t  };\n\n\t  spy.andThrow = function (value) {\n\t    thrownValue = value;\n\t    return spy;\n\t  };\n\n\t  spy.andReturn = function (value) {\n\t    returnValue = value;\n\t    return spy;\n\t  };\n\n\t  spy.getLastCall = function () {\n\t    return spy.calls[spy.calls.length - 1];\n\t  };\n\n\t  spy.reset = function () {\n\t    spy.calls = [];\n\t  };\n\n\t  spy.restore = spy.destroy = restore;\n\n\t  spy.__isSpy = true;\n\n\t  spies.push(spy);\n\n\t  return spy;\n\t};\n\n\tvar spyOn = exports.spyOn = function spyOn(object, methodName) {\n\t  var original = object[methodName];\n\n\t  if (!isSpy(original)) {\n\t    (0, _assert2.default)((0, _TestUtils.isFunction)(original), 'Cannot spyOn the %s property; it is not a function', methodName);\n\n\t    object[methodName] = createSpy(original, function () {\n\t      object[methodName] = original;\n\t    });\n\t  }\n\n\t  return object[methodName];\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar keys = __webpack_require__(15);\n\tvar foreach = __webpack_require__(17);\n\tvar hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';\n\n\tvar toStr = Object.prototype.toString;\n\n\tvar isFunction = function (fn) {\n\t\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n\t};\n\n\tvar arePropertyDescriptorsSupported = function () {\n\t\tvar obj = {};\n\t\ttry {\n\t\t\tObject.defineProperty(obj, 'x', { enumerable: false, value: obj });\n\t        /* eslint-disable no-unused-vars, no-restricted-syntax */\n\t        for (var _ in obj) { return false; }\n\t        /* eslint-enable no-unused-vars, no-restricted-syntax */\n\t\t\treturn obj.x === obj;\n\t\t} catch (e) { /* this is IE 8. */\n\t\t\treturn false;\n\t\t}\n\t};\n\tvar supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();\n\n\tvar defineProperty = function (object, name, value, predicate) {\n\t\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\t\treturn;\n\t\t}\n\t\tif (supportsDescriptors) {\n\t\t\tObject.defineProperty(object, name, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t} else {\n\t\t\tobject[name] = value;\n\t\t}\n\t};\n\n\tvar defineProperties = function (object, map) {\n\t\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\t\tvar props = keys(map);\n\t\tif (hasSymbols) {\n\t\t\tprops = props.concat(Object.getOwnPropertySymbols(map));\n\t\t}\n\t\tforeach(props, function (name) {\n\t\t\tdefineProperty(object, name, map[name], predicates[name]);\n\t\t});\n\t};\n\n\tdefineProperties.supportsDescriptors = !!supportsDescriptors;\n\n\tmodule.exports = defineProperties;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar slice = Array.prototype.slice;\n\tvar isArgs = __webpack_require__(16);\n\tvar hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString');\n\tvar hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar blacklistedKeys = {\n\t\t$console: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$parent: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!blacklistedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tvar keysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n\n\tkeysShim.shim = function shimObjectKeys() {\n\t\tif (Object.keys) {\n\t\t\tvar keysWorksWithArguments = (function () {\n\t\t\t\t// Safari 5.0 bug\n\t\t\t\treturn (Object.keys(arguments) || '').length === 2;\n\t\t\t}(1, 2));\n\t\t\tif (!keysWorksWithArguments) {\n\t\t\t\tvar originalKeys = Object.keys;\n\t\t\t\tObject.keys = function keys(object) {\n\t\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn originalKeys(object);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tObject.keys = keysShim;\n\t\t}\n\t\treturn Object.keys || keysShim;\n\t};\n\n\tmodule.exports = keysShim;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar toStr = Object.prototype.toString;\n\n\tmodule.exports = function isArguments(value) {\n\t\tvar str = toStr.call(value);\n\t\tvar isArgs = str === '[object Arguments]';\n\t\tif (!isArgs) {\n\t\t\tisArgs = str !== '[object Array]' &&\n\t\t\t\tvalue !== null &&\n\t\t\t\ttypeof value === 'object' &&\n\t\t\t\ttypeof value.length === 'number' &&\n\t\t\t\tvalue.length >= 0 &&\n\t\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t\t}\n\t\treturn isArgs;\n\t};\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar toString = Object.prototype.toString;\n\n\tmodule.exports = function forEach (obj, fn, ctx) {\n\t    if (toString.call(fn) !== '[object Function]') {\n\t        throw new TypeError('iterator must be a function');\n\t    }\n\t    var l = obj.length;\n\t    if (l === +l) {\n\t        for (var i = 0; i < l; i++) {\n\t            fn.call(ctx, obj[i], i, obj);\n\t        }\n\t    } else {\n\t        for (var k in obj) {\n\t            if (hasOwn.call(obj, k)) {\n\t                fn.call(ctx, obj[k], k, obj);\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.stringContains = exports.objectContains = exports.arrayContains = exports.functionThrows = exports.isA = exports.isObject = exports.isArray = exports.isFunction = exports.isEqual = exports.whyNotEqual = undefined;\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n\tvar _isRegex = __webpack_require__(19);\n\n\tvar _isRegex2 = _interopRequireDefault(_isRegex);\n\n\tvar _why = __webpack_require__(20);\n\n\tvar _why2 = _interopRequireDefault(_why);\n\n\tvar _objectKeys = __webpack_require__(15);\n\n\tvar _objectKeys2 = _interopRequireDefault(_objectKeys);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t/**\n\t * Returns the reason why the given arguments are not *conceptually*\n\t * equal, if any; the empty string otherwise.\n\t */\n\tvar whyNotEqual = exports.whyNotEqual = function whyNotEqual(a, b) {\n\t  return a == b ? '' : (0, _why2.default)(a, b);\n\t};\n\n\t/**\n\t * Returns true if the given arguments are *conceptually* equal.\n\t */\n\tvar isEqual = exports.isEqual = function isEqual(a, b) {\n\t  return whyNotEqual(a, b) === '';\n\t};\n\n\t/**\n\t * Returns true if the given object is a function.\n\t */\n\tvar isFunction = exports.isFunction = function isFunction(object) {\n\t  return typeof object === 'function';\n\t};\n\n\t/**\n\t * Returns true if the given object is an array.\n\t */\n\tvar isArray = exports.isArray = function isArray(object) {\n\t  return Array.isArray(object);\n\t};\n\n\t/**\n\t * Returns true if the given object is an object.\n\t */\n\tvar isObject = exports.isObject = function isObject(object) {\n\t  return object && !isArray(object) && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';\n\t};\n\n\t/**\n\t * Returns true if the given object is an instanceof value\n\t * or its typeof is the given value.\n\t */\n\tvar isA = exports.isA = function isA(object, value) {\n\t  if (isFunction(value)) return object instanceof value;\n\n\t  if (value === 'array') return Array.isArray(object);\n\n\t  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === value;\n\t};\n\n\t/**\n\t * Returns true if the given function throws the given value\n\t * when invoked. The value may be:\n\t *\n\t * - undefined, to merely assert there was a throw\n\t * - a constructor function, for comparing using instanceof\n\t * - a regular expression, to compare with the error message\n\t * - a string, to find in the error message\n\t */\n\tvar functionThrows = exports.functionThrows = function functionThrows(fn, context, args, value) {\n\t  try {\n\t    fn.apply(context, args);\n\t  } catch (error) {\n\t    if (value == null) return true;\n\n\t    if (isFunction(value) && error instanceof value) return true;\n\n\t    var message = error.message || error;\n\n\t    if (typeof message === 'string') {\n\t      if ((0, _isRegex2.default)(value) && value.test(error.message)) return true;\n\n\t      if (typeof value === 'string' && message.indexOf(value) !== -1) return true;\n\t    }\n\t  }\n\n\t  return false;\n\t};\n\n\t/**\n\t * Returns true if the given array contains the value, false\n\t * otherwise. The compareValues function must return false to\n\t * indicate a non-match.\n\t */\n\tvar arrayContains = exports.arrayContains = function arrayContains(array, value, compareValues) {\n\t  return array.some(function (item) {\n\t    return compareValues(item, value) !== false;\n\t  });\n\t};\n\n\tvar ownEnumerableKeys = function ownEnumerableKeys(object) {\n\t  if ((typeof Reflect === 'undefined' ? 'undefined' : _typeof(Reflect)) === 'object' && typeof Reflect.ownKeys === 'function') {\n\t    return Reflect.ownKeys(object).filter(function (key) {\n\t      return Object.getOwnPropertyDescriptor(object, key).enumerable;\n\t    });\n\t  }\n\n\t  if (typeof Object.getOwnPropertySymbols === 'function') {\n\t    return Object.getOwnPropertySymbols(object).filter(function (key) {\n\t      return Object.getOwnPropertyDescriptor(object, key).enumerable;\n\t    }).concat((0, _objectKeys2.default)(object));\n\t  }\n\n\t  return (0, _objectKeys2.default)(object);\n\t};\n\n\t/**\n\t * Returns true if the given object contains the value, false\n\t * otherwise. The compareValues function must return false to\n\t * indicate a non-match.\n\t */\n\tvar objectContains = exports.objectContains = function objectContains(object, value, compareValues) {\n\t  return ownEnumerableKeys(value).every(function (k) {\n\t    if (isObject(object[k]) && isObject(value[k])) return objectContains(object[k], value[k], compareValues);\n\n\t    return compareValues(object[k], value[k]);\n\t  });\n\t};\n\n\t/**\n\t * Returns true if the given string contains the value, false otherwise.\n\t */\n\tvar stringContains = exports.stringContains = function stringContains(string, value) {\n\t  return string.indexOf(value) !== -1;\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar regexExec = RegExp.prototype.exec;\n\tvar tryRegexExec = function tryRegexExec(value) {\n\t\ttry {\n\t\t\tregexExec.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\tvar toStr = Object.prototype.toString;\n\tvar regexClass = '[object RegExp]';\n\tvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\n\tmodule.exports = function isRegex(value) {\n\t\tif (typeof value !== 'object') { return false; }\n\t\treturn hasToStringTag ? tryRegexExec(value) : toStr.call(value) === regexClass;\n\t};\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar ObjectPrototype = Object.prototype;\n\tvar toStr = ObjectPrototype.toString;\n\tvar booleanValue = Boolean.prototype.valueOf;\n\tvar has = __webpack_require__(2);\n\tvar isArrowFunction = __webpack_require__(21);\n\tvar isBoolean = __webpack_require__(23);\n\tvar isDate = __webpack_require__(24);\n\tvar isGenerator = __webpack_require__(25);\n\tvar isNumber = __webpack_require__(26);\n\tvar isRegex = __webpack_require__(19);\n\tvar isString = __webpack_require__(27);\n\tvar isSymbol = __webpack_require__(28);\n\tvar isCallable = __webpack_require__(22);\n\n\tvar isProto = Object.prototype.isPrototypeOf;\n\n\tvar foo = function foo() {};\n\tvar functionsHaveNames = foo.name === 'foo';\n\n\tvar symbolValue = typeof Symbol === 'function' ? Symbol.prototype.valueOf : null;\n\tvar symbolIterator = __webpack_require__(29)();\n\n\tvar collectionsForEach = __webpack_require__(30)();\n\n\tvar getPrototypeOf = Object.getPrototypeOf;\n\tif (!getPrototypeOf) {\n\t\t/* eslint-disable no-proto */\n\t\tif (typeof 'test'.__proto__ === 'object') {\n\t\t\tgetPrototypeOf = function (obj) {\n\t\t\t\treturn obj.__proto__;\n\t\t\t};\n\t\t} else {\n\t\t\tgetPrototypeOf = function (obj) {\n\t\t\t\tvar constructor = obj.constructor,\n\t\t\t\t\toldConstructor;\n\t\t\t\tif (has(obj, 'constructor')) {\n\t\t\t\t\toldConstructor = constructor;\n\t\t\t\t\tif (!(delete obj.constructor)) { // reset constructor\n\t\t\t\t\t\treturn null; // can't delete obj.constructor, return null\n\t\t\t\t\t}\n\t\t\t\t\tconstructor = obj.constructor; // get real constructor\n\t\t\t\t\tobj.constructor = oldConstructor; // restore constructor\n\t\t\t\t}\n\t\t\t\treturn constructor ? constructor.prototype : ObjectPrototype; // needed for IE\n\t\t\t};\n\t\t}\n\t\t/* eslint-enable no-proto */\n\t}\n\n\tvar isArray = Array.isArray || function (value) {\n\t\treturn toStr.call(value) === '[object Array]';\n\t};\n\n\tvar normalizeFnWhitespace = function normalizeFnWhitespace(fnStr) {\n\t\t// this is needed in IE 9, at least, which has inconsistencies here.\n\t\treturn fnStr.replace(/^function ?\\(/, 'function (').replace('){', ') {');\n\t};\n\n\tvar tryMapSetEntries = function tryMapSetEntries(collection) {\n\t\tvar foundEntries = [];\n\t\ttry {\n\t\t\tcollectionsForEach.Map.call(collection, function (key, value) {\n\t\t\t\tfoundEntries.push([key, value]);\n\t\t\t});\n\t\t} catch (notMap) {\n\t\t\ttry {\n\t\t\t\tcollectionsForEach.Set.call(collection, function (value) {\n\t\t\t\t\tfoundEntries.push([value]);\n\t\t\t\t});\n\t\t\t} catch (notSet) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn foundEntries;\n\t};\n\n\tmodule.exports = function whyNotEqual(value, other) {\n\t\tif (value === other) { return ''; }\n\t\tif (value == null || other == null) {\n\t\t\treturn value === other ? '' : String(value) + ' !== ' + String(other);\n\t\t}\n\n\t\tvar valToStr = toStr.call(value);\n\t\tvar otherToStr = toStr.call(other);\n\t\tif (valToStr !== otherToStr) {\n\t\t\treturn 'toStringTag is not the same: ' + valToStr + ' !== ' + otherToStr;\n\t\t}\n\n\t\tvar valIsBool = isBoolean(value);\n\t\tvar otherIsBool = isBoolean(other);\n\t\tif (valIsBool || otherIsBool) {\n\t\t\tif (!valIsBool) { return 'first argument is not a boolean; second argument is'; }\n\t\t\tif (!otherIsBool) { return 'second argument is not a boolean; first argument is'; }\n\t\t\tvar valBoolVal = booleanValue.call(value);\n\t\t\tvar otherBoolVal = booleanValue.call(other);\n\t\t\tif (valBoolVal === otherBoolVal) { return ''; }\n\t\t\treturn 'primitive value of boolean arguments do not match: ' + valBoolVal + ' !== ' + otherBoolVal;\n\t\t}\n\n\t\tvar valIsNumber = isNumber(value);\n\t\tvar otherIsNumber = isNumber(value);\n\t\tif (valIsNumber || otherIsNumber) {\n\t\t\tif (!valIsNumber) { return 'first argument is not a number; second argument is'; }\n\t\t\tif (!otherIsNumber) { return 'second argument is not a number; first argument is'; }\n\t\t\tvar valNum = Number(value);\n\t\t\tvar otherNum = Number(other);\n\t\t\tif (valNum === otherNum) { return ''; }\n\t\t\tvar valIsNaN = isNaN(value);\n\t\t\tvar otherIsNaN = isNaN(other);\n\t\t\tif (valIsNaN && !otherIsNaN) {\n\t\t\t\treturn 'first argument is NaN; second is not';\n\t\t\t} else if (!valIsNaN && otherIsNaN) {\n\t\t\t\treturn 'second argument is NaN; first is not';\n\t\t\t} else if (valIsNaN && otherIsNaN) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn 'numbers are different: ' + value + ' !== ' + other;\n\t\t}\n\n\t\tvar valIsString = isString(value);\n\t\tvar otherIsString = isString(other);\n\t\tif (valIsString || otherIsString) {\n\t\t\tif (!valIsString) { return 'second argument is string; first is not'; }\n\t\t\tif (!otherIsString) { return 'first argument is string; second is not'; }\n\t\t\tvar stringVal = String(value);\n\t\t\tvar otherVal = String(other);\n\t\t\tif (stringVal === otherVal) { return ''; }\n\t\t\treturn 'string values are different: \"' + stringVal + '\" !== \"' + otherVal + '\"';\n\t\t}\n\n\t\tvar valIsDate = isDate(value);\n\t\tvar otherIsDate = isDate(other);\n\t\tif (valIsDate || otherIsDate) {\n\t\t\tif (!valIsDate) { return 'second argument is Date, first is not'; }\n\t\t\tif (!otherIsDate) { return 'first argument is Date, second is not'; }\n\t\t\tvar valTime = +value;\n\t\t\tvar otherTime = +other;\n\t\t\tif (valTime === otherTime) { return ''; }\n\t\t\treturn 'Dates have different time values: ' + valTime + ' !== ' + otherTime;\n\t\t}\n\n\t\tvar valIsRegex = isRegex(value);\n\t\tvar otherIsRegex = isRegex(other);\n\t\tif (valIsRegex || otherIsRegex) {\n\t\t\tif (!valIsRegex) { return 'second argument is RegExp, first is not'; }\n\t\t\tif (!otherIsRegex) { return 'first argument is RegExp, second is not'; }\n\t\t\tvar regexStringVal = String(value);\n\t\t\tvar regexStringOther = String(other);\n\t\t\tif (regexStringVal === regexStringOther) { return ''; }\n\t\t\treturn 'regular expressions differ: ' + regexStringVal + ' !== ' + regexStringOther;\n\t\t}\n\n\t\tvar valIsArray = isArray(value);\n\t\tvar otherIsArray = isArray(other);\n\t\tif (valIsArray || otherIsArray) {\n\t\t\tif (!valIsArray) { return 'second argument is an Array, first is not'; }\n\t\t\tif (!otherIsArray) { return 'first argument is an Array, second is not'; }\n\t\t\tif (value.length !== other.length) {\n\t\t\t\treturn 'arrays have different length: ' + value.length + ' !== ' + other.length;\n\t\t\t}\n\t\t\tif (String(value) !== String(other)) { return 'stringified Arrays differ'; }\n\n\t\t\tvar index = value.length - 1;\n\t\t\tvar equal = '';\n\t\t\tvar valHasIndex, otherHasIndex;\n\t\t\twhile (equal === '' && index >= 0) {\n\t\t\t\tvalHasIndex = has(value, index);\n\t\t\t\totherHasIndex = has(other, index);\n\t\t\t\tif (!valHasIndex && otherHasIndex) { return 'second argument has index ' + index + '; first does not'; }\n\t\t\t\tif (valHasIndex && !otherHasIndex) { return 'first argument has index ' + index + '; second does not'; }\n\t\t\t\tequal = whyNotEqual(value[index], other[index]);\n\t\t\t\tindex -= 1;\n\t\t\t}\n\t\t\treturn equal;\n\t\t}\n\n\t\tvar valueIsSym = isSymbol(value);\n\t\tvar otherIsSym = isSymbol(other);\n\t\tif (valueIsSym !== otherIsSym) {\n\t\t\tif (valueIsSym) { return 'first argument is Symbol; second is not'; }\n\t\t\treturn 'second argument is Symbol; first is not';\n\t\t}\n\t\tif (valueIsSym && otherIsSym) {\n\t\t\treturn symbolValue.call(value) === symbolValue.call(other) ? '' : 'first Symbol value !== second Symbol value';\n\t\t}\n\n\t\tvar valueIsGen = isGenerator(value);\n\t\tvar otherIsGen = isGenerator(other);\n\t\tif (valueIsGen !== otherIsGen) {\n\t\t\tif (valueIsGen) { return 'first argument is a Generator; second is not'; }\n\t\t\treturn 'second argument is a Generator; first is not';\n\t\t}\n\n\t\tvar valueIsArrow = isArrowFunction(value);\n\t\tvar otherIsArrow = isArrowFunction(other);\n\t\tif (valueIsArrow !== otherIsArrow) {\n\t\t\tif (valueIsArrow) { return 'first argument is an Arrow function; second is not'; }\n\t\t\treturn 'second argument is an Arrow function; first is not';\n\t\t}\n\n\t\tif (isCallable(value) || isCallable(other)) {\n\t\t\tif (functionsHaveNames && whyNotEqual(value.name, other.name) !== '') {\n\t\t\t\treturn 'Function names differ: \"' + value.name + '\" !== \"' + other.name + '\"';\n\t\t\t}\n\t\t\tif (whyNotEqual(value.length, other.length) !== '') {\n\t\t\t\treturn 'Function lengths differ: ' + value.length + ' !== ' + other.length;\n\t\t\t}\n\n\t\t\tvar valueStr = normalizeFnWhitespace(String(value));\n\t\t\tvar otherStr = normalizeFnWhitespace(String(other));\n\t\t\tif (whyNotEqual(valueStr, otherStr) === '') { return ''; }\n\n\t\t\tif (!valueIsGen && !valueIsArrow) {\n\t\t\t\treturn whyNotEqual(valueStr.replace(/\\)\\s*\\{/, '){'), otherStr.replace(/\\)\\s*\\{/, '){')) === '' ? '' : 'Function string representations differ';\n\t\t\t}\n\t\t\treturn whyNotEqual(valueStr, otherStr) === '' ? '' : 'Function string representations differ';\n\t\t}\n\n\t\tif (typeof value === 'object' || typeof other === 'object') {\n\t\t\tif (typeof value !== typeof other) { return 'arguments have a different typeof: ' + typeof value + ' !== ' + typeof other; }\n\t\t\tif (isProto.call(value, other)) { return 'first argument is the [[Prototype]] of the second'; }\n\t\t\tif (isProto.call(other, value)) { return 'second argument is the [[Prototype]] of the first'; }\n\t\t\tif (getPrototypeOf(value) !== getPrototypeOf(other)) { return 'arguments have a different [[Prototype]]'; }\n\n\t\t\tif (symbolIterator) {\n\t\t\t\tvar valueIteratorFn = value[symbolIterator];\n\t\t\t\tvar valueIsIterable = isCallable(valueIteratorFn);\n\t\t\t\tvar otherIteratorFn = other[symbolIterator];\n\t\t\t\tvar otherIsIterable = isCallable(otherIteratorFn);\n\t\t\t\tif (valueIsIterable !== otherIsIterable) {\n\t\t\t\t\tif (valueIsIterable) { return 'first argument is iterable; second is not'; }\n\t\t\t\t\treturn 'second argument is iterable; first is not';\n\t\t\t\t}\n\t\t\t\tif (valueIsIterable && otherIsIterable) {\n\t\t\t\t\tvar valueIterator = valueIteratorFn.call(value);\n\t\t\t\t\tvar otherIterator = otherIteratorFn.call(other);\n\t\t\t\t\tvar valueNext, otherNext, nextWhy;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tvalueNext = valueIterator.next();\n\t\t\t\t\t\totherNext = otherIterator.next();\n\t\t\t\t\t\tif (!valueNext.done && !otherNext.done) {\n\t\t\t\t\t\t\tnextWhy = whyNotEqual(valueNext, otherNext);\n\t\t\t\t\t\t\tif (nextWhy !== '') {\n\t\t\t\t\t\t\t\treturn 'iteration results are not equal: ' + nextWhy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (!valueNext.done && !otherNext.done);\n\t\t\t\t\tif (valueNext.done && !otherNext.done) { return 'first argument finished iterating before second'; }\n\t\t\t\t\tif (!valueNext.done && otherNext.done) { return 'second argument finished iterating before first'; }\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t} else if (collectionsForEach.Map || collectionsForEach.Set) {\n\t\t\t\tvar valueEntries = tryMapSetEntries(value);\n\t\t\t\tvar otherEntries = tryMapSetEntries(other);\n\t\t\t\tvar valueEntriesIsArray = isArray(valueEntries);\n\t\t\t\tvar otherEntriesIsArray = isArray(otherEntries);\n\t\t\t\tif (valueEntriesIsArray && !otherEntriesIsArray) { return 'first argument has Collection entries, second does not'; }\n\t\t\t\tif (!valueEntriesIsArray && otherEntriesIsArray) { return 'second argument has Collection entries, first does not'; }\n\t\t\t\tif (valueEntriesIsArray && otherEntriesIsArray) {\n\t\t\t\t\tvar entriesWhy = whyNotEqual(valueEntries, otherEntries);\n\t\t\t\t\treturn entriesWhy === '' ? '' : 'Collection entries differ: ' + entriesWhy;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar key, valueKeyIsRecursive, otherKeyIsRecursive, keyWhy;\n\t\t\tfor (key in value) {\n\t\t\t\tif (has(value, key)) {\n\t\t\t\t\tif (!has(other, key)) { return 'first argument has key \"' + key + '\"; second does not'; }\n\t\t\t\t\tvalueKeyIsRecursive = !!value[key] && value[key][key] === value;\n\t\t\t\t\totherKeyIsRecursive = !!other[key] && other[key][key] === other;\n\t\t\t\t\tif (valueKeyIsRecursive !== otherKeyIsRecursive) {\n\t\t\t\t\t\tif (valueKeyIsRecursive) { return 'first argument has a circular reference at key \"' + key + '\"; second does not'; }\n\t\t\t\t\t\treturn 'second argument has a circular reference at key \"' + key + '\"; first does not';\n\t\t\t\t\t}\n\t\t\t\t\tif (!valueKeyIsRecursive && !otherKeyIsRecursive) {\n\t\t\t\t\t\tkeyWhy = whyNotEqual(value[key], other[key]);\n\t\t\t\t\t\tif (keyWhy !== '') {\n\t\t\t\t\t\t\treturn 'value at key \"' + key + '\" differs: ' + keyWhy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (key in other) {\n\t\t\t\tif (has(other, key) && !has(value, key)) {\n\t\t\t\t\treturn 'second argument has key \"' + key + '\"; first does not';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\treturn false;\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar isCallable = __webpack_require__(22);\n\tvar fnToStr = Function.prototype.toString;\n\tvar isNonArrowFnRegex = /^\\s*function/;\n\tvar isArrowFnWithParensRegex = /^\\([^\\)]*\\) *=>/;\n\tvar isArrowFnWithoutParensRegex = /^[^=]*=>/;\n\n\tmodule.exports = function isArrowFunction(fn) {\n\t\tif (!isCallable(fn)) { return false; }\n\t\tvar fnStr = fnToStr.call(fn);\n\t\treturn fnStr.length > 0 &&\n\t\t\t!isNonArrowFnRegex.test(fnStr) &&\n\t\t\t(isArrowFnWithParensRegex.test(fnStr) || isArrowFnWithoutParensRegex.test(fnStr));\n\t};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar fnToStr = Function.prototype.toString;\n\n\tvar constructorRegex = /^\\s*class /;\n\tvar isES6ClassFn = function isES6ClassFn(value) {\n\t\ttry {\n\t\t\tvar fnStr = fnToStr.call(value);\n\t\t\tvar singleStripped = fnStr.replace(/\\/\\/.*\\n/g, '');\n\t\t\tvar multiStripped = singleStripped.replace(/\\/\\*[.\\s\\S]*\\*\\//g, '');\n\t\t\tvar spaceStripped = multiStripped.replace(/\\n/mg, ' ').replace(/ {2}/g, ' ');\n\t\t\treturn constructorRegex.test(spaceStripped);\n\t\t} catch (e) {\n\t\t\treturn false; // not a function\n\t\t}\n\t};\n\n\tvar tryFunctionObject = function tryFunctionObject(value) {\n\t\ttry {\n\t\t\tif (isES6ClassFn(value)) { return false; }\n\t\t\tfnToStr.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\tvar toStr = Object.prototype.toString;\n\tvar fnClass = '[object Function]';\n\tvar genClass = '[object GeneratorFunction]';\n\tvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\n\tmodule.exports = function isCallable(value) {\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\treturn strClass === fnClass || strClass === genClass;\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar boolToStr = Boolean.prototype.toString;\n\n\tvar tryBooleanObject = function tryBooleanObject(value) {\n\t\ttry {\n\t\t\tboolToStr.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\tvar toStr = Object.prototype.toString;\n\tvar boolClass = '[object Boolean]';\n\tvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\n\tmodule.exports = function isBoolean(value) {\n\t\tif (typeof value === 'boolean') { return true; }\n\t\tif (typeof value !== 'object') { return false; }\n\t\treturn hasToStringTag ? tryBooleanObject(value) : toStr.call(value) === boolClass;\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar getDay = Date.prototype.getDay;\n\tvar tryDateObject = function tryDateObject(value) {\n\t\ttry {\n\t\t\tgetDay.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tvar toStr = Object.prototype.toString;\n\tvar dateClass = '[object Date]';\n\tvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\n\tmodule.exports = function isDateObject(value) {\n\t\tif (typeof value !== 'object' || value === null) { return false; }\n\t\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n\t};\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar toStr = Object.prototype.toString;\n\tvar fnToStr = Function.prototype.toString;\n\tvar isFnRegex = /^\\s*function\\*/;\n\n\tmodule.exports = function isGeneratorFunction(fn) {\n\t\tif (typeof fn !== 'function') { return false; }\n\t\tvar fnStr = toStr.call(fn);\n\t\treturn (fnStr === '[object Function]' || fnStr === '[object GeneratorFunction]') && isFnRegex.test(fnToStr.call(fn));\n\t};\n\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar numToStr = Number.prototype.toString;\n\tvar tryNumberObject = function tryNumberObject(value) {\n\t\ttry {\n\t\t\tnumToStr.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\tvar toStr = Object.prototype.toString;\n\tvar numClass = '[object Number]';\n\tvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\n\tmodule.exports = function isNumberObject(value) {\n\t\tif (typeof value === 'number') { return true; }\n\t\tif (typeof value !== 'object') { return false; }\n\t\treturn hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;\n\t};\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar strValue = String.prototype.valueOf;\n\tvar tryStringObject = function tryStringObject(value) {\n\t\ttry {\n\t\t\tstrValue.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\tvar toStr = Object.prototype.toString;\n\tvar strClass = '[object String]';\n\tvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\n\tmodule.exports = function isString(value) {\n\t\tif (typeof value === 'string') { return true; }\n\t\tif (typeof value !== 'object') { return false; }\n\t\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n\t};\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar toStr = Object.prototype.toString;\n\tvar hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';\n\n\tif (hasSymbols) {\n\t\tvar symToStr = Symbol.prototype.toString;\n\t\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\t\tvar isSymbolObject = function isSymbolObject(value) {\n\t\t\tif (typeof value.valueOf() !== 'symbol') { return false; }\n\t\t\treturn symStringRegex.test(symToStr.call(value));\n\t\t};\n\t\tmodule.exports = function isSymbol(value) {\n\t\t\tif (typeof value === 'symbol') { return true; }\n\t\t\tif (toStr.call(value) !== '[object Symbol]') { return false; }\n\t\t\ttry {\n\t\t\t\treturn isSymbolObject(value);\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t} else {\n\t\tmodule.exports = function isSymbol(value) {\n\t\t\t// this environment does not support Symbols.\n\t\t\treturn false;\n\t\t};\n\t}\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar isSymbol = __webpack_require__(28);\n\n\tmodule.exports = function getSymbolIterator() {\n\t\tvar symbolIterator = typeof Symbol === 'function' && isSymbol(Symbol.iterator) ? Symbol.iterator : null;\n\n\t\tif (typeof Object.getOwnPropertyNames === 'function' && typeof Map === 'function' && typeof Map.prototype.entries === 'function') {\n\t\t\tObject.getOwnPropertyNames(Map.prototype).forEach(function (name) {\n\t\t\t\tif (name !== 'entries' && name !== 'size' && Map.prototype[name] === Map.prototype.entries) {\n\t\t\t\t\tsymbolIterator = name;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn symbolIterator;\n\t};\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tmodule.exports = function () {\n\t\tvar mapForEach = (function () {\n\t\t\tif (typeof Map !== 'function') { return null; }\n\t\t\ttry {\n\t\t\t\tMap.prototype.forEach.call({}, function () {});\n\t\t\t} catch (e) {\n\t\t\t\treturn Map.prototype.forEach;\n\t\t\t}\n\t\t\treturn null;\n\t\t}());\n\n\t\tvar setForEach = (function () {\n\t\t\tif (typeof Set !== 'function') { return null; }\n\t\t\ttry {\n\t\t\t\tSet.prototype.forEach.call({}, function () {});\n\t\t\t} catch (e) {\n\t\t\t\treturn Set.prototype.forEach;\n\t\t\t}\n\t\t\treturn null;\n\t\t}());\n\n\t\treturn { Map: mapForEach, Set: setForEach };\n\t};\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Expectation = __webpack_require__(1);\n\n\tvar _Expectation2 = _interopRequireDefault(_Expectation);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar Extensions = [];\n\n\tfunction extend(extension) {\n\t  if (Extensions.indexOf(extension) === -1) {\n\t    Extensions.push(extension);\n\n\t    for (var p in extension) {\n\t      if (extension.hasOwnProperty(p)) _Expectation2.default.prototype[p] = extension[p];\n\t    }\n\t  }\n\t}\n\n\texports.default = extend;\n\n/***/ }\n/******/ ])\n});\n;"}